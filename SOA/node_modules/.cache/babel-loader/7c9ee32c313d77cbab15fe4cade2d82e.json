{"ast":null,"code":"var _jsxFileName = \"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/home.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport QuestionsService from \"../services/questions.service\";\nimport AuthenticationService from \"../services/auth.service\";\nimport AnswersService from \"../services/answers.service\";\nimport StatisticsService from \"../services/statistics.service\";\nimport BarChart from \"./graph.component\";\nimport \"../styling/homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [questionsPerDate, setQuestionsPerDate] = useState([]);\n  const [questionsPerKeyword, setQuestionsPerKeyword] = useState([]);\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n  const [numberOfAnswers, setNumberOfAnswers] = useState(0);\n  const [numberOfUsers, setNumberOfUsers] = useState(0);\n  useEffect(() => {\n    StatisticsService.getQuestionsPerDate().then(response => {\n      setQuestionsPerDate(response.data);\n    }, error => {\n      console.log(`Error Occured: ${error.message}`);\n      setQuestionsPerDate(`Error Occured: ${error.message}`);\n    });\n    StatisticsService.getQuestionsPerKeyword().then(response => {\n      setQuestionsPerKeyword(response.data);\n    }, error => {\n      console.log(`Error Occured: ${error.message}`);\n      setQuestionsPerKeyword(\"Error Occured\", error.message);\n    });\n    AuthenticationService.getNumberOfUsers().then(response => {\n      setNumberOfUsers(response.data.count);\n    }, error => {\n      setNumberOfUsers(-1);\n    });\n    AnswersService.getNumberOfAnswers().then(response => {\n      console.log(response.data);\n      setNumberOfAnswers(response.data.count);\n    }, error => {\n      // const _content =\n      //   (error.response && error.response.data) ||\n      //   error.message ||\n      //   error.toString();\n      //   console.log(_content);\n      setNumberOfAnswers(-1);\n    });\n    QuestionsService.getNumberOfQuestions().then(response => {\n      setNumberOfQuestions(response.data.count);\n    }, error => {\n      const _content = error.response && error.response.data || error.message || error.toString();\n\n      setNumberOfQuestions(-1);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-stats\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: numberOfQuestions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            id: \"my-answers\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: numberOfAnswers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: numberOfUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(BarChart, {\n        id: 1,\n        data: questionsPerKeyword.map(({\n          word,\n          count\n        }) => ({\n          label: word,\n          value: count\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        id: 2,\n        data: questionsPerDate.map(({\n          date,\n          count\n        }) => ({\n          label: date,\n          value: count\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"hxywRXRHYa5ub9g12yyvamhzLhk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/home.component.js"],"names":["React","useState","useEffect","QuestionsService","AuthenticationService","AnswersService","StatisticsService","BarChart","Home","questionsPerDate","setQuestionsPerDate","questionsPerKeyword","setQuestionsPerKeyword","numberOfQuestions","setNumberOfQuestions","numberOfAnswers","setNumberOfAnswers","numberOfUsers","setNumberOfUsers","getQuestionsPerDate","then","response","data","error","console","log","message","getQuestionsPerKeyword","getNumberOfUsers","count","getNumberOfAnswers","getNumberOfQuestions","_content","toString","map","word","label","value","date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport QuestionsService from \"../services/questions.service\";\nimport AuthenticationService from \"../services/auth.service\";\nimport AnswersService from \"../services/answers.service\";\nimport StatisticsService from \"../services/statistics.service\";\n\nimport BarChart from \"./graph.component\";\n\nimport \"../styling/homepage.css\";\n\nconst Home = () => {\n  const [questionsPerDate, setQuestionsPerDate] = useState([]);\n  const [questionsPerKeyword, setQuestionsPerKeyword] = useState([]);\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0); \n  const [numberOfAnswers, setNumberOfAnswers] = useState(0); \n  const [numberOfUsers, setNumberOfUsers] = useState(0);\n\n  useEffect(() => {\n\n    StatisticsService.getQuestionsPerDate().then(\n      (response) => {\n        setQuestionsPerDate(response.data);\n      },\n      (error) => {\n        console.log(`Error Occured: ${error.message}`);\n        setQuestionsPerDate(`Error Occured: ${error.message}`);\n      }\n    );\n\n    StatisticsService.getQuestionsPerKeyword().then(\n      (response) => {\n        setQuestionsPerKeyword(response.data);\n      },\n      (error) => {        \n        console.log(`Error Occured: ${error.message}`);\n        setQuestionsPerKeyword(\"Error Occured\",error.message);\n      }\n    );\n\n    AuthenticationService.getNumberOfUsers().then(\n      (response) => {\n        setNumberOfUsers(response.data.count);\n      },\n      (error) => {\n        setNumberOfUsers(-1);\n      }\n    );\n\n    AnswersService.getNumberOfAnswers().then(\n      (response) => {\n        console.log(response.data);\n        setNumberOfAnswers(response.data.count);\n      },\n      (error) => {\n        // const _content =\n        //   (error.response && error.response.data) ||\n        //   error.message ||\n        //   error.toString();\n        //   console.log(_content);\n        setNumberOfAnswers(-1);\n      }\n    );\n\n    QuestionsService.getNumberOfQuestions().then(\n      (response) => {\n        setNumberOfQuestions(response.data.count);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n          setNumberOfQuestions(-1);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"side-stats\">\n        <div className=\"stats-container\">\n        <ul>\n            <li>\n              <h1>{numberOfQuestions}</h1>\n              <i>questions</i>\n            </li>\n            <li id=\"my-answers\">\n              <h1>{numberOfAnswers}</h1>\n              <i>answers</i>\n            </li>\n            <li>\n              <h1>{numberOfUsers}</h1>\n              <i>users</i>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <header className=\"jumbotron\">\n        <BarChart id={1} data={questionsPerKeyword.map(({word,count}) => ({label:word,value:count}))} />\n        <BarChart id={2} data={questionsPerDate.map(({date,count}) => ({label:date,value:count}))} />\n        \n      </header>\n    </div>\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}