{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header.service\";\nconst API_URL = \"http://localhost:5000/\";\n\nconst createQuestion = question => {\n  return axios.post(API_URL + \"qa/question/createquestion\", question, {\n    headers: {\n      'x-auth-token': \"hdfsghdshdfs56343\"\n    }\n  });\n};\n\nconst deleteQuestion = id => {\n  return axios.post(API_URL + \"qa/question/deletequestion\", {\n    id\n  }, {\n    headers: {\n      'x-auth-token': \"hdfsghdshdfs56343\"\n    }\n  });\n};\n\nconst findQuestionById = id => {\n  return axios.post(API_URL + \"qa/question/findquestionbyid\", {\n    id\n  }, {\n    headers: authHeader()\n  });\n};\n\nconst filterQuestionsByKeywordAndDate = (startDate, endDate, word) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbydateandkeyword\", {\n    startDate,\n    endDate,\n    word\n  });\n};\n\nconst filterQuestionsByKeyword = word => {\n  return axios.post(API_URL + \"qa/question/findquestionsbykeyword\", {\n    word\n  });\n};\n\nconst filterQuestionsByDate = (startDate, endDate) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbydate\", {\n    startDate,\n    endDate\n  });\n};\n\nconst getNumberOfQuestions = () => {\n  return axios.get(API_URL + \"qa/question/countquestions\");\n};\n\nexport default {\n  createQuestion,\n  findQuestionById,\n  filterQuestionsByKeywordAndDate,\n  filterQuestionsByKeyword,\n  filterQuestionsByDate,\n  getNumberOfQuestions,\n  deleteQuestion\n};","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/questions.service.js"],"names":["axios","authHeader","API_URL","createQuestion","question","post","headers","deleteQuestion","id","findQuestionById","filterQuestionsByKeywordAndDate","startDate","endDate","word","filterQuestionsByKeyword","filterQuestionsByDate","getNumberOfQuestions","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAEA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,SAAOJ,KAAK,CAACK,IAAN,CAAWH,OAAO,GAAG,4BAArB,EAAmDE,QAAnD,EAA4D;AAACE,IAAAA,OAAO,EAAE;AAAE,sBAAe;AAAjB;AAAV,GAA5D,CAAP;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAIC,EAAD,IAAQ;AAC7B,SAAOR,KAAK,CAACK,IAAN,CAAWH,OAAO,GAAG,4BAArB,EAAmD;AAAEM,IAAAA;AAAF,GAAnD,EAA0D;AAACF,IAAAA,OAAO,EAAE;AAAE,sBAAe;AAAjB;AAAV,GAA1D,CAAP;AACD,CAFD;;AAIA,MAAMG,gBAAgB,GAAID,EAAD,IAAQ;AAC/B,SAAOR,KAAK,CAACK,IAAN,CAAWH,OAAO,GAAG,8BAArB,EAAqD;AAAEM,IAAAA;AAAF,GAArD,EAA4D;AAACF,IAAAA,OAAO,EAAEL,UAAU;AAApB,GAA5D,CAAP;AACD,CAFD;;AAIA,MAAMS,+BAA+B,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,KAA8B;AACpE,SAAOb,KAAK,CAACK,IAAN,CAAWH,OAAO,GAAG,2CAArB,EAAkE;AAACS,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAlE,CAAP;AACD,CAFD;;AAIA,MAAMC,wBAAwB,GAAID,IAAD,IAAU;AACzC,SAAOb,KAAK,CAACK,IAAN,CAAWH,OAAO,GAAG,oCAArB,EAA2D;AAACW,IAAAA;AAAD,GAA3D,CAAP;AACD,CAFD;;AAIA,MAAME,qBAAqB,GAAG,CAACJ,SAAD,EAAYC,OAAZ,KAAwB;AACpD,SAAOZ,KAAK,CAACK,IAAN,CAAWH,OAAO,GAAG,iCAArB,EAAwD;AAACS,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAxD,CAAP;AACD,CAFD;;AAIA,MAAMI,oBAAoB,GAAG,MAAM;AACjC,SAAOhB,KAAK,CAACiB,GAAN,CAAUf,OAAO,GAAG,4BAApB,CAAP;AACD,CAFD;;AAIA,eAAe;AACbC,EAAAA,cADa;AAEbM,EAAAA,gBAFa;AAGbC,EAAAA,+BAHa;AAIbI,EAAAA,wBAJa;AAKbC,EAAAA,qBALa;AAMbC,EAAAA,oBANa;AAObT,EAAAA;AAPa,CAAf","sourcesContent":["import axios from \"axios\";\nimport authHeader from \"./auth-header.service\";\n\nconst API_URL = \"http://localhost:5000/\";\n\nconst createQuestion = (question) => {\n  return axios.post(API_URL + \"qa/question/createquestion\", question,{headers: { 'x-auth-token':\"hdfsghdshdfs56343\"}});\n};\n\nconst deleteQuestion = (id) => {\n  return axios.post(API_URL + \"qa/question/deletequestion\", { id },{headers: { 'x-auth-token':\"hdfsghdshdfs56343\"}});\n};\n  \nconst findQuestionById = (id) => {\n  return axios.post(API_URL + \"qa/question/findquestionbyid\", { id },{headers: authHeader()});\n};\n\nconst filterQuestionsByKeywordAndDate = (startDate, endDate, word) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbydateandkeyword\", {startDate, endDate, word});\n};\n\nconst filterQuestionsByKeyword = (word) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbykeyword\", {word});\n};\n\nconst filterQuestionsByDate = (startDate, endDate) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbydate\", {startDate, endDate});\n};\n\nconst getNumberOfQuestions = () => {\n  return axios.get(API_URL + \"qa/question/countquestions\");\n};\n  \nexport default {\n  createQuestion,\n  findQuestionById,\n  filterQuestionsByKeywordAndDate,\n  filterQuestionsByKeyword,\n  filterQuestionsByDate,\n  getNumberOfQuestions,\n  deleteQuestion\n};"]},"metadata":{},"sourceType":"module"}