{"ast":null,"code":"var _jsxFileName = \"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/graph.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { axisBottom, axisLeft, scaleBand, scaleLinear, scaleOrdinal, schemeDark2, select } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 10,\n  right: 30,\n  bottom: 80,\n  left: 60\n};\nconst width = 800 - margin.left - margin.right;\nconst height = 400 - margin.top - margin.bottom;\n\nconst BarChart = ({\n  id,\n  data\n}) => {\n  _s();\n\n  useEffect(() => {\n    const color = scaleOrdinal().domain(data.map(({\n      label\n    }) => label)).range(schemeDark2);\n    const svg = select(`#bar-chart-${id}`).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const x = scaleBand().range([0, width]).domain(data.map(d => d.label)).padding(0.2);\n    svg.append('g').attr('transform', `translate(0,${height})`).call(axisBottom(x)).selectAll('text').attr('transform', 'translate(-10,0)rotate(-45)').style('text-anchor', 'end');\n    const maxValue = Math.max(...data.map(({\n      value\n    }) => value));\n    const y = scaleLinear().domain([0, maxValue]).range([height, 0]);\n    svg.append('g').call(axisLeft(y));\n    svg.selectAll('mybar').data(data).enter().append('rect').attr('x', d => x(d.label)).attr('y', d => y(d.value)).attr('width', x.bandwidth()).attr('height', d => height - y(d.value)).attr('fill', d => color(d.label));\n    return () => select(svg.node().parentElement).remove();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `bar-chart-${id}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BarChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/graph.component.js"],"names":["React","useEffect","axisBottom","axisLeft","scaleBand","scaleLinear","scaleOrdinal","schemeDark2","select","margin","top","right","bottom","left","width","height","BarChart","id","data","color","domain","map","label","range","svg","append","attr","x","d","padding","call","selectAll","style","maxValue","Math","max","value","y","enter","bandwidth","node","parentElement","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,MAPF,QAQO,IARP;;AAUA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,EADQ;AACJC,EAAAA,KAAK,EAAE,EADH;AACOC,EAAAA,MAAM,EAAE,EADf;AACmBC,EAAAA,IAAI,EAAE;AADzB,CAAf;AAGA,MAAMC,KAAK,GAAG,MAAML,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KAAzC;AACA,MAAMI,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAAzC;;AAEA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAkB;AAAA;;AACjCjB,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMkB,KAAK,GAAGb,YAAY,GACvBc,MADW,CACJF,IAAI,CAACG,GAAL,CAAS,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAeA,KAAxB,CADI,EAEXC,KAFW,CAELhB,WAFK,CAAd;AAIA,UAAMiB,GAAG,GAAGhB,MAAM,CAAE,cAAaS,EAAG,EAAlB,CAAN,CACTQ,MADS,CACF,KADE,EAETC,IAFS,CAEJ,OAFI,EAEKZ,KAAK,GAAGL,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAFlC,EAGTe,IAHS,CAGJ,QAHI,EAGMX,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAHnC,EAITa,MAJS,CAIF,GAJE,EAKTC,IALS,CAKJ,WALI,EAMP,aAAYjB,MAAM,CAACI,IAAK,IAAGJ,MAAM,CAACC,GAAI,GAN/B,CAAZ;AAQA,UAAMiB,CAAC,GAAGvB,SAAS,GAChBmB,KADO,CACD,CAAC,CAAD,EAAIT,KAAJ,CADC,EAEPM,MAFO,CAEAF,IAAI,CAACG,GAAL,CAAUO,CAAD,IAAOA,CAAC,CAACN,KAAlB,CAFA,EAGPO,OAHO,CAGC,GAHD,CAAV;AAIAL,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,WADR,EACsB,eAAcX,MAAO,GAD3C,EAEGe,IAFH,CAEQ5B,UAAU,CAACyB,CAAD,CAFlB,EAGGI,SAHH,CAGa,MAHb,EAIGL,IAJH,CAIQ,WAJR,EAIqB,6BAJrB,EAKGM,KALH,CAKS,aALT,EAKwB,KALxB;AAOA,UAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGjB,IAAI,CAACG,GAAL,CAAS,CAAC;AAAEe,MAAAA;AAAF,KAAD,KAAeA,KAAxB,CAAZ,CAAjB;AACA,UAAMC,CAAC,GAAGhC,WAAW,GAClBe,MADO,CACA,CAAC,CAAD,EAAIa,QAAJ,CADA,EAEPV,KAFO,CAED,CAACR,MAAD,EAAS,CAAT,CAFC,CAAV;AAGAS,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EACGK,IADH,CACQ3B,QAAQ,CAACkC,CAAD,CADhB;AAGAb,IAAAA,GAAG,CAACO,SAAJ,CAAc,OAAd,EACGb,IADH,CACQA,IADR,EAEGoB,KAFH,GAGGb,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,GAJR,EAIcE,CAAD,IAAOD,CAAC,CAACC,CAAC,CAACN,KAAH,CAJrB,EAKGI,IALH,CAKQ,GALR,EAKcE,CAAD,IAAOS,CAAC,CAACT,CAAC,CAACQ,KAAH,CALrB,EAMGV,IANH,CAMQ,OANR,EAMiBC,CAAC,CAACY,SAAF,EANjB,EAOGb,IAPH,CAOQ,QAPR,EAOmBE,CAAD,IAAOb,MAAM,GAAGsB,CAAC,CAACT,CAAC,CAACQ,KAAH,CAPnC,EAQGV,IARH,CAQQ,MARR,EAQiBE,CAAD,IAAOT,KAAK,CAACS,CAAC,CAACN,KAAH,CAR5B;AAUA,WAAO,MAAMd,MAAM,CAACgB,GAAG,CAACgB,IAAJ,GAAWC,aAAZ,CAAN,CAAiCC,MAAjC,EAAb;AACD,GA3CQ,EA2CN,CAACxB,IAAD,CA3CM,CAAT;AA6CA,sBACE;AAAK,IAAA,EAAE,EAAG,aAAYD,EAAG;AAAzB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAjDD;;GAAMD,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  axisBottom,\n  axisLeft,\n  scaleBand,\n  scaleLinear,\n  scaleOrdinal,\n  schemeDark2,\n  select,\n} from 'd3';\n\nconst margin = {\n  top: 10, right: 30, bottom: 80, left: 60,\n};\nconst width = 800 - margin.left - margin.right;\nconst height = 400 - margin.top - margin.bottom;\n\nconst BarChart = ({ id, data }) => {\n  useEffect(() => {\n    \n    const color = scaleOrdinal()\n      .domain(data.map(({ label }) => label))\n      .range(schemeDark2);\n\n    const svg = select(`#bar-chart-${id}`)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform',\n        `translate(${margin.left},${margin.top})`);\n\n    const x = scaleBand()\n      .range([0, width])\n      .domain(data.map((d) => d.label))\n      .padding(0.2);\n    svg.append('g')\n      .attr('transform', `translate(0,${height})`)\n      .call(axisBottom(x))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end');\n\n    const maxValue = Math.max(...data.map(({ value }) => value));\n    const y = scaleLinear()\n      .domain([0, maxValue])\n      .range([height, 0]);\n    svg.append('g')\n      .call(axisLeft(y));\n\n    svg.selectAll('mybar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.label))\n      .attr('y', (d) => y(d.value))\n      .attr('width', x.bandwidth())\n      .attr('height', (d) => height - y(d.value))\n      .attr('fill', (d) => color(d.label));\n\n    return () => select(svg.node().parentElement).remove();\n  }, [data]);\n\n  return (\n    <div id={`bar-chart-${id}`} />\n  );\n};\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}