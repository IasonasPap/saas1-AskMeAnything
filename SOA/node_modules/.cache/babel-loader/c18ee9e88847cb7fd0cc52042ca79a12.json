{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header.service\";\nconst API_URL = \"http://localhost:4000/\";\n\nconst register = (username, email, password, fullName) => {\n  return axios.post(API_URL + \"saas1/user/signup/\", {\n    username,\n    password,\n    email,\n    fullName\n  });\n};\n\nconst login = (username, password) => {\n  return axios.post(API_URL + \"saas1/signin/\", {\n    username,\n    password\n  }).then(response => {\n    //temporary solution\n    response.data[\"username\"] = username;\n\n    if (response.data.token) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getAllUsers = userid => {\n  return axios.get(API_URL + \"saas1/user/findusers/\", {\n    userid\n  });\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst deleteCurrentUser = username => {\n  return axios.post(API_URL + \"saas1/user/deleteuser/\", {\n    username\n  }, {\n    headers: authHeader()\n  });\n};\n\nconst updatePassword = (username, password) => {\n  return axios.post(API_URL + \"saas1/user/updatepassword/\", {\n    username,\n    password\n  }, {\n    headers: authHeader()\n  });\n};\n\nconst getNumberOfUsers = () => {\n  return axios.get(API_URL + \"qa/answer/countusers\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  getAllUsers,\n  deleteCurrentUser,\n  updatePassword,\n  getNumberOfUsers\n};","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/auth.service.js"],"names":["axios","authHeader","API_URL","register","username","email","password","fullName","post","login","then","response","data","token","localStorage","setItem","JSON","stringify","logout","removeItem","getAllUsers","userid","get","getCurrentUser","parse","getItem","deleteCurrentUser","headers","updatePassword","getNumberOfUsers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,EAA4BC,QAA5B,KAAyC;AACxD,SAAOP,KAAK,CAACQ,IAAN,CAAWN,OAAO,GAAG,oBAArB,EAA2C;AAChDE,IAAAA,QADgD;AAEhDE,IAAAA,QAFgD;AAGhDD,IAAAA,KAHgD;AAIhDE,IAAAA;AAJgD,GAA3C,CAAP;AAMD,CAPD;;AASA,MAAME,KAAK,GAAG,CAACL,QAAD,EAAWE,QAAX,KAAwB;AACpC,SAAON,KAAK,CACTQ,IADI,CACCN,OAAO,GAAG,eADX,EAC4B;AAC/BE,IAAAA,QAD+B;AAE/BE,IAAAA;AAF+B,GAD5B,EAKJI,IALI,CAKEC,QAAD,IAAc;AAClB;AACAA,IAAAA,QAAQ,CAACC,IAAT,CAAc,UAAd,IAA0BR,QAA1B;;AACA,QAAIO,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AAED,WAAOD,QAAQ,CAACC,IAAhB;AACD,GAbI,CAAP;AAcD,CAfD;;AAiBA,MAAMM,MAAM,GAAG,MAAM;AACnBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9B,SAAOrB,KAAK,CAACsB,GAAN,CAAUpB,OAAO,GAAG,uBAApB,EAA4C;AAACmB,IAAAA;AAAD,GAA5C,CAAP;AACD,CAFD;;AAIA,MAAME,cAAc,GAAG,MAAM;AAC3B,SAAOP,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFD;;AAIA,MAAMC,iBAAiB,GAAItB,QAAD,IAAc;AACtC,SAAOJ,KAAK,CAACQ,IAAN,CAAWN,OAAO,GAAG,wBAArB,EAA8C;AAACE,IAAAA;AAAD,GAA9C,EAAyD;AAACuB,IAAAA,OAAO,EAAE1B,UAAU;AAApB,GAAzD,CAAP;AACD,CAFD;;AAIA,MAAM2B,cAAc,GAAG,CAACxB,QAAD,EAAUE,QAAV,KAAuB;AAC5C,SAAON,KAAK,CAACQ,IAAN,CAAWN,OAAO,GAAG,4BAArB,EAAkD;AAACE,IAAAA,QAAD;AAAUE,IAAAA;AAAV,GAAlD,EAAsE;AAACqB,IAAAA,OAAO,EAAE1B,UAAU;AAApB,GAAtE,CAAP;AACD,CAFD;;AAIA,MAAM4B,gBAAgB,GAAG,MAAM;AAC7B,SAAO7B,KAAK,CAACsB,GAAN,CAAUpB,OAAO,GAAG,sBAApB,CAAP;AACD,CAFD;;AAIA,eAAe;AACbC,EAAAA,QADa;AAEbM,EAAAA,KAFa;AAGbS,EAAAA,MAHa;AAIbK,EAAAA,cAJa;AAKbH,EAAAA,WALa;AAMbM,EAAAA,iBANa;AAObE,EAAAA,cAPa;AAQbC,EAAAA;AARa,CAAf","sourcesContent":["import axios from \"axios\";\nimport authHeader from \"./auth-header.service\";\n\nconst API_URL = \"http://localhost:4000/\";\n\nconst register = (username, email, password, fullName) => {\n  return axios.post(API_URL + \"saas1/user/signup/\", {\n    username,    \n    password,\n    email,\n    fullName\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"saas1/signin/\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      //temporary solution\n      response.data[\"username\"]=username;\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getAllUsers = (userid) => {\n  return axios.get(API_URL + \"saas1/user/findusers/\",{userid});\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst deleteCurrentUser = (username) => {\n  return axios.post(API_URL + \"saas1/user/deleteuser/\",{username},{headers: authHeader()});\n};\n\nconst updatePassword = (username,password) => {\n  return axios.post(API_URL + \"saas1/user/updatepassword/\",{username,password},{headers: authHeader()});\n};\n\nconst getNumberOfUsers = () => {\n  return axios.get(API_URL + \"qa/answer/countusers\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  getAllUsers,\n  deleteCurrentUser,\n  updatePassword,\n  getNumberOfUsers\n};"]},"metadata":{},"sourceType":"module"}