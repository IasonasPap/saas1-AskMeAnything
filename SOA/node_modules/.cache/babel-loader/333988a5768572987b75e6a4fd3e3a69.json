{"ast":null,"code":"var _jsxFileName = \"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/myQuestion.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../styling/profile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyQuestion = ({\n  question,\n  handleDelete\n}) => {\n  _s();\n\n  const {\n    id,\n    title,\n    text,\n    questionedOn,\n    keywords,\n    answers\n  } = question;\n  const [editQuestion, setEditQuestion] = useState(false);\n  const [questionText, setQuestionText] = useState(text);\n\n  const handleEditQuestion = () => editQuestion ? (setQuestionText(text), setEditQuestion(!editQuestion)) : setEditQuestion(!editQuestion);\n\n  const handleDeleteQuestion = () => {\n    console.log(\"delete question\");\n  };\n\n  const handleChangeText = event => setQuestionText(event.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), editQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-check underline\",\n            style: {\n              fontSize: \"20px\",\n              color: \"green\"\n            },\n            children: \" apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-close underline\",\n            style: {\n              fontSize: \"20px\",\n              color: \"red\",\n              marginLeft: \"15px\"\n            },\n            onClick: handleEditQuestion,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pen underline\",\n            style: {\n              fontSize: \"20px\",\n              color: \"grey\"\n            },\n            onClick: handleEditQuestion,\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-close underline\",\n            style: {\n              fontSize: \"20px\",\n              color: \"red\",\n              marginLeft: \"15px\"\n            },\n            onClick: () => handleDelete(id, \"accept-delete-question\"),\n            children: \" delete question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), editQuestion ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 3,\n        id: \"change-text\",\n        value: questionText,\n        onChange: handleChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"keywords\",\n        children: keywords.map(({\n          word\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"small-caps\",\n          children: \"answered on: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this), \" \", questionedOn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Answers(\", answers.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), answers.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: answers.map(({\n        text,\n        answeredOn\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"answer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"small-caps\",\n            children: \"asked on: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 34\n          }, this), \" \", answeredOn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this) : []]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyQuestion, \"wvNfJomJb7/OQdwyuut8BbnIC6Y=\");\n\n_c = MyQuestion;\nexport default MyQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyQuestion\");","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/myQuestion.component.js"],"names":["React","useState","useEffect","MyQuestion","question","handleDelete","id","title","text","questionedOn","keywords","answers","editQuestion","setEditQuestion","questionText","setQuestionText","handleEditQuestion","handleDeleteQuestion","console","log","handleChangeText","event","target","value","fontSize","color","marginLeft","map","word","length","answeredOn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"../styling/profile.css\";\n\nconst MyQuestion = ({question, handleDelete}) => {\n  const {id,title,text,questionedOn,keywords,answers} = question;\n  const [editQuestion,setEditQuestion] = useState(false);  \n  const [questionText,setQuestionText] = useState(text);\n\n  const handleEditQuestion = () => editQuestion ? (setQuestionText(text),setEditQuestion(!editQuestion)): setEditQuestion(!editQuestion)\n\n  const handleDeleteQuestion = () => {\n    console.log(\"delete question\")\n  }\n\n  const handleChangeText = (event) => setQuestionText(event.target.value)\n\n    return (\n        <li key={id}>\n            <div id=\"question\">\n                <div className=\"edit-container\">\n                    {/* <input id=\"change-title\" value={questionTitle} onChange={handleChangeTitle}></input> */}\n                    <h2 className=\"title\">{title}</h2>\n                    {\n                        editQuestion\n                            ? (<div>\n                                <i className=\"fa fa-check underline\" style={{ fontSize: \"20px\", color: \"green\"}}> apply</i>\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleEditQuestion}>cancel</i>\n                            </div>)\n                            : (<div>\n                                <i className='fas fa-pen underline' style={{ fontSize: \"20px\", color: \"grey\" }} onClick={handleEditQuestion}>edit</i>\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={() => handleDelete(id,\"accept-delete-question\")}> delete question</i>\n                            </div>\n                            )\n                    }\n                </div>\n\n                {editQuestion\n                    ? <textarea rows={3} id=\"change-text\" value={questionText} onChange={handleChangeText}></textarea>\n                    : <div>{questionText}</div>\n                }\n                \n                <ul className=\"keywords\">\n                    {\n                        keywords.map(({ word }) =>\n                            <li>{word}</li>\n                        )\n                    }\n                </ul>\n                <div><span className=\"small-caps\">answered on: </span> {questionedOn}</div>\n\n            </div>\n            <h2>Answers({answers.length})</h2>\n            {answers.length ?\n                (<ul>\n                    {answers.map(({ text, answeredOn }) =>\n                        <li className=\"answer\">\n                            <div className=\"answer-text\">{text}</div>\n                            <div><span className=\"small-caps\">asked on: </span> {answeredOn}</div>\n                        </li>\n                    )}\n                </ul>\n                ) : (\n                    []\n                )\n            }\n        </li>);\n}\n\nexport default MyQuestion;"]},"metadata":{},"sourceType":"module"}