{"ast":null,"code":"var _jsxFileName = \"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/answer.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport \"../styling/answerQuestion.css\";\nimport QuestionsService from \"../services/questions.service\";\nimport AnswersService from \"../services/answers.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  userId\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [keywords, setKeywords] = useState([]);\n  const [questionedOn, setQuestionedOn] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    QuestionsService.findQuestionById(id).then(response => {\n      setText(response.data.text);\n      setTitle(response.data.title);\n      setKeywords(response.data.keywords);\n      setQuestionedOn(response.data.questionedOn);\n      setAnswers(response.data.answers);\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(resMessage);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setAnswer(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    AnswersService.createAnswer(answer, userId, id).then(() => {\n      setSubmitted(true);\n    });\n  };\n\n  const handleCancel = () => {\n    history.push(\"/questions\");\n  };\n\n  const handleNewAnswer = () => {\n    setSubmitted(false);\n    setAnswer('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"answer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Answer a question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Answer Submitted Succesfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewAnswer,\n        children: \"Give Another Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : !title ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          contentEditable: \"true\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"keywords\",\n          children: keywords.map(({\n            word\n          }) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"small-caps\",\n            children: \"asked on: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 14\n          }, this), questionedOn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Answers(\", answers.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), answers.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answers.map(({\n          text,\n          answeredOn\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"answer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-text\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"small-caps\",\n              children: \"answered on:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 22\n            }, this), \" \", answeredOn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }, this) : [], /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Give your answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"my-answer\",\n        label: \"Multiline\",\n        multiline: true,\n        rows: 8,\n        variant: \"outlined\",\n        onChange: handleChange,\n        value: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"bz4qy0Q6ZAwUwcFVrkGFOgeH1+o=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/answer.component.js"],"names":["React","useState","useEffect","useParams","useHistory","QuestionsService","AnswersService","Question","userId","id","history","text","setText","title","setTitle","keywords","setKeywords","questionedOn","setQuestionedOn","answers","setAnswers","answer","setAnswer","submitted","setSubmitted","findQuestionById","then","response","data","error","resMessage","message","toString","console","log","handleChange","event","target","value","handleSubmit","createAnswer","handleCancel","push","handleNewAnswer","map","word","length","answeredOn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {useParams, useHistory} from \"react-router-dom\";\n\nimport \"../styling/answerQuestion.css\";\nimport QuestionsService from \"../services/questions.service\";\nimport AnswersService from \"../services/answers.service\";\n\nconst Question = ({userId}) => {\n  const {id} = useParams();\n  const history = useHistory();\n  \n  const [text,setText] = useState(\"\");\n  const [title,setTitle] = useState(\"\");\n  const [keywords,setKeywords] = useState([]);\n  const [questionedOn,setQuestionedOn] = useState(\"\");\n  const [answers,setAnswers] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  const [submitted,setSubmitted] = useState(false);\n  \n  useEffect(()=> {\n    QuestionsService.findQuestionById(id).then(\n      (response) => {\n        setText(response.data.text);\n        setTitle(response.data.title);\n        setKeywords(response.data.keywords);\n        setQuestionedOn(response.data.questionedOn);\n        setAnswers(response.data.answers);\n      },\n     (error) => {\n      const resMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n          console.log(resMessage);\n    })\n  },[])\n\n  const handleChange = (event) => {\n    setAnswer(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    AnswersService.createAnswer(answer,userId,id).then(() => {\n      setSubmitted(true);\n    })\n  }\n\n  const handleCancel = () => {\n    history.push(\"/questions\");\n  }\n\n  const handleNewAnswer = () => {\n    setSubmitted(false);\n    setAnswer('');\n  }\n\n  return (\n    <div className=\"answer-container\">\n      <h3>      \n          Answer a question\n      </h3>\n      {submitted ? (\n        <div>\n          <h4>Answer Submitted Succesfully</h4>\n          <button onClick={handleNewAnswer}>Give Another Answer</button>\n        </div>\n      ):(\n      !title ?\n      <div className=\"loader\">\n      </div>\n      : \n      <>\n      <div className=\"question\">\n        <h2 contentEditable=\"true\">{title}</h2>\n        <div>{text}</div>\n        <ul className=\"keywords\">\n          {\n            keywords.map(({word}) => \n              <li>{word}</li>\n            )\n          }\n        </ul>\n        <div><span className=\"small-caps\">asked on: </span>{questionedOn}</div>\n      </div>\n\n      <h2>Answers({answers.length})</h2>\n      {answers.length ?\n        (<ul>                    \n            {answers.map(({text,answeredOn}) => \n              <li className=\"answer\">\n                <div className=\"answer-text\">{text}</div>\n                \n                <div><span className=\"small-caps\">answered on:</span> {answeredOn}</div>\n              </li>\n            )}\n        </ul>\n        ):(\n          []\n        )\n      }\n\n    <h2>Give your answer:</h2>\n    <textarea\n      id=\"my-answer\"\n      label=\"Multiline\"\n      multiline\n      rows={8}\n      variant=\"outlined\"\n      onChange={handleChange}\n      value={answer}\n    />\n    <div className=\"btns-container\">\n      <button className=\"submit-btn\" onClick={handleSubmit}>\n        Submit\n      </button>\n      <button className=\"cancel-btn\" onClick={handleCancel}>\n        Cancel\n      </button>\n    </div>\n    </>\n    )}\n    </div>\n  );\n};\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}