{"ast":null,"code":"var _jsxFileName = \"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/browseQuestions.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport QuestionsService from \"../services/questions.service\";\nimport \"../styling/browseQuestions.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst Browse = ({\n  currentUser\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n  const [content, setContent] = useState([]);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n  useEffect(() => {\n    setDateTo(\"\");\n    setDateFrom(\"\");\n    setKeyword(\"\");\n    UserService.getPublicContent().then(response => {\n      setAllQuestions(response.data);\n      setContent(response.data);\n    }, error => {\n      const _content = error.response && error.response.data || error.message || error.toString();\n\n      setContent(_content);\n    });\n  }, []);\n\n  const handleChangeDateFrom = event => setDateFrom(event.target.value);\n\n  const handleChangeDateTo = event => setDateTo(event.target.value);\n\n  const handleChangeKeyword = event => setKeyword(event.target.value);\n\n  const handleClear = () => {\n    setDateTo(\"\");\n    setDateFrom(\"\");\n    setKeyword(\"\");\n    setMessage(\"\");\n    setContent(allQuestions);\n  };\n\n  const handleApply = () => {\n    const stylesSuccess = {\n      color: 'green',\n      marginTop: '8px'\n    };\n    const stylesFail = {\n      color: 'red',\n      marginTop: '8px'\n    };\n\n    if (keyword && dateFrom && dateTo) {\n      const startDate = dateFrom.split(\"-\").join(\"\");\n      const endDate = dateTo.split(\"-\").join(\"\");\n      setMessage( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: stylesSuccess,\n        children: \"Filters Applied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this));\n      QuestionsService.filterQuestionsByKeywordAndDate(startDate, endDate, keyword).then(response => {\n        setContent(response.data);\n      }, error => {\n        const _content = error.response && error.response.data || error.message || error.toString();\n\n        setContent(_content);\n      });\n    } else if (keyword && dateTo || keyword && dateFrom || !dateFrom && dateTo || dateFrom && !dateTo) {\n      setMessage( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: stylesFail,\n        children: \"Provide both dates.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this));\n    } else if (keyword) {\n      setMessage( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: stylesSuccess,\n        children: \"Filter Applied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this));\n      QuestionsService.filterQuestionsByKeyword(keyword).then(response => {\n        setContent(response.data);\n      }, error => {\n        const _content = error.response && error.response.data || error.message || error.toString();\n\n        setContent(_content);\n      });\n    } else if (dateFrom && dateTo) {\n      const startDate = dateFrom.split(\"-\").join(\"\");\n      const endDate = dateTo.split(\"-\").join(\"\");\n      QuestionsService.filterQuestionsByDate(startDate, endDate).then(response => {\n        setContent(response.data);\n      }, error => {\n        const _content = error.response && error.response.data || error.message || error.toString();\n\n        setContent(_content);\n      });\n    } else {\n      setMessage( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: stylesFail,\n        children: \"No Filters Applied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"browse-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"filter-heading\",\n          children: \"Filter Questions By :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-by-date-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-by-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.container,\n              noValidate: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                label: \"Date from\",\n                type: \"date\",\n                className: classes.textField,\n                value: dateFrom,\n                onChange: handleChangeDateFrom,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.container,\n              noValidate: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                label: \"Date to\",\n                type: \"date\",\n                className: classes.textField,\n                value: dateTo,\n                onChange: handleChangeDateTo,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-by-keyword-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"keyword-input\",\n              onChange: handleChangeKeyword,\n              value: keyword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleApply,\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: handleClear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: typeof content == 'string' ? content : !content.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 12\n      }, this) : currentUser ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"questions-container\",\n        children: content.map(question => {\n          const {\n            id,\n            title,\n            text,\n            questionedOn,\n            keywords\n          } = question;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"question\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: \"/answer/\" + id\n                },\n                className: \"answer-link\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"title\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"keywords\",\n                children: keywords.map(({\n                  word\n                }) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"small-caps\",\n                  children: \"asked on: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 28\n                }, this), \" \", questionedOn]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"questions-container\",\n        children: content.slice(0, 10).map(question => {\n          const {\n            id,\n            title,\n            text,\n            questionedOn,\n            keywords\n          } = question;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            id: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/answer/\" + id,\n                question\n              },\n              className: \"answer-link\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"keywords\",\n              children: keywords.map(keyword => {\n                /*#__PURE__*/\n                _jsxDEV(\"li\", {\n                  children: keyword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"small-caps\",\n                children: \"asked on: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 24\n              }, this), \" \", questionedOn]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Browse, \"HSyndswhiPu/2GHvrxp2kq7OtDw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Browse;\nexport default Browse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/browseQuestions.component.js"],"names":["React","useState","useEffect","Link","UserService","QuestionsService","makeStyles","TextField","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Browse","currentUser","classes","message","setMessage","content","setContent","allQuestions","setAllQuestions","dateFrom","setDateFrom","dateTo","setDateTo","keyword","setKeyword","getPublicContent","then","response","data","error","_content","toString","handleChangeDateFrom","event","target","value","handleChangeDateTo","handleChangeKeyword","handleClear","handleApply","stylesSuccess","color","marginTop","stylesFail","startDate","split","join","endDate","filterQuestionsByKeywordAndDate","filterQuestionsByKeyword","filterQuestionsByDate","shrink","length","map","question","id","title","text","questionedOn","keywords","pathname","word","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport QuestionsService from \"../services/questions.service\";\nimport \"../styling/browseQuestions.css\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst Browse = ({currentUser}) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n  const [content, setContent] = useState([]);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n\n  useEffect(() => {\n    setDateTo(\"\");\n    setDateFrom(\"\");\n    setKeyword(\"\");\n\n    UserService.getPublicContent().then(\n      (response) => {\n        setAllQuestions(response.data);\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  const handleChangeDateFrom = (event) => setDateFrom(event.target.value)\n\n  const handleChangeDateTo = (event) => setDateTo(event.target.value)\n\n  const handleChangeKeyword = (event) => setKeyword(event.target.value)\n\n  const handleClear = () => {\n    setDateTo(\"\");\n    setDateFrom(\"\");\n    setKeyword(\"\");\n    setMessage(\"\");\n    setContent(allQuestions);\n  }\n\n  const handleApply = () => {\n    const stylesSuccess = {\n      color: 'green',\n      marginTop:'8px'\n    }\n    const stylesFail = {\n      color: 'red',\n      marginTop:'8px'\n    }\n\n    if (keyword && dateFrom && dateTo) {\n      const startDate = dateFrom.split(\"-\").join(\"\");\n      const endDate = dateTo.split(\"-\").join(\"\");\n      setMessage(\n        <div style={stylesSuccess}>\n          Filters Applied!\n        </div>\n      );\n      QuestionsService.filterQuestionsByKeywordAndDate(startDate, endDate, keyword).then(\n        (response) => {\n          setContent(response.data);\n        },\n        (error) => {\n          const _content =\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString();\n  \n          setContent(_content);\n        }\n      )\n\n    }\n    else if ((keyword && dateTo) || (keyword && dateFrom) || (!dateFrom && dateTo) || (dateFrom && !dateTo)) {\n      setMessage(\n        <div style={stylesFail}>\n          Provide both dates.\n        </div>\n      )\n    }      \n    else if (keyword) {\n      setMessage(\n        <div style={stylesSuccess}>\n          Filter Applied!\n        </div>\n      )\n      QuestionsService.filterQuestionsByKeyword(keyword).then(\n        (response) => {\n          setContent(response.data);\n        },\n        (error) => {\n          const _content =\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString();\n  \n          setContent(_content);\n        }\n      )\n\n    }\n    else if (dateFrom && dateTo) {\n      const startDate = dateFrom.split(\"-\").join(\"\");\n      const endDate = dateTo.split(\"-\").join(\"\");\n\n      QuestionsService.filterQuestionsByDate(startDate, endDate).then(\n        (response) => {\n          setContent(response.data);\n        },\n        (error) => {\n          const _content =\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString();\n  \n          setContent(_content);\n        }\n      )\n\n    }\n    else {\n      setMessage(\n        <div style={stylesFail}>\n          No Filters Applied!\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"browse-container\">\n      <div className=\"side-container\">\n        <div className=\"filter-container\">\n          <h2 id=\"filter-heading\">Filter Questions By :</h2>\n            <div className=\"filter-by-date-container\">\n              <h3>Date</h3>\n              <div className=\"filter-by-date\">\n                <form className={classes.container} noValidate>\n                <TextField\n                  id=\"date\"\n                  label=\"Date from\"\n                  type=\"date\"\n                  className={classes.textField}\n                  value={dateFrom}\n                  onChange={handleChangeDateFrom}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                </form>\n                <form className={classes.container} noValidate>\n                <TextField\n                  id=\"date\"\n                  label=\"Date to\"\n                  type=\"date\"\n                  className={classes.textField}\n                  value={dateTo}\n                  onChange={handleChangeDateTo}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                </form>\n              </div>\n            </div>\n\n            <div className=\"filter-by-keyword-container\">\n              <h3>Keyword</h3>\n              <div>\n                <input \n                  id=\"keyword-input\"\n                  onChange={handleChangeKeyword}\n                  value={keyword}\n                ></input>\n              </div>\n            </div>\n\n            {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n            )}\n\n            <div className=\"btns-container\">\n              <button className=\"submit-btn\" onClick={handleApply}>\n                Apply\n              </button>\n              <button className=\"cancel-btn\" onClick={handleClear}>\n                Clear\n              </button>\n            </div>\n        </div>\n      </div>\n\n      <div className=\"questions-container\">        \n        {(typeof content == 'string') \n        ? content \n        : (\n          (!content.length)\n          ? \n          (<div className=\"loader\">\n          </div>)\n          : (currentUser \n            ? (\n            <ul className=\"questions-container\">\n              {content.map( (question) => \n                {\n                  const {id,title,text,questionedOn,keywords} = question;\n                  return (\n                  <li key={id}>\n                    <div id=\"question\" >\n                      <Link \n                        to={{pathname: \"/answer/\"+id}} \n                        className=\"answer-link\"\n                      >\n                        <h2 className=\"title\">{title}</h2>\n                      </Link>\n                      <div>{text}</div>\n                      <ul className=\"keywords\">\n                        {\n                          keywords.map(({word}) => \n                            <li>{word}</li>\n                          )\n                        }\n                      </ul>\n                      <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\n                    </div>\n                  </li>);\n                }\n            )}\n            </ul>\n            ) : (\n            <ul className=\"questions-container\">\n            {content.slice(0,10).map( (question) => \n              {\n                const {id,title,text,questionedOn,keywords} = question;\n                return ( \n                <li id=\"question\" key={id}>\n                  <Link \n                      to={{pathname: \"/answer/\"+id, question}} \n                      className=\"answer-link\"\n                  >\n                    <h2>{title}</h2>\n                  </Link>\n                  <div>{text}</div>\n                  <ul className=\"keywords\">\n                    {\n                      keywords.map((keyword) => {\n                        <li>{keyword}</li>\n                      })\n                    }\n                  </ul>\n                  <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\n                </li>\n                )\n              }\n            )}\n            </ul>          \n          ))\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default Browse;"]},"metadata":{},"sourceType":"module"}