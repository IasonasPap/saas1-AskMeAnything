{"ast":null,"code":"var _jsxFileName = \"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/edit.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams, Link } from \"react-router-dom\";\nimport \"../styling/answerQuestion.css\";\nimport QuestionsService from \"../services/questions.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  const {\n    id\n  } = useParams(); //const location = useLocation();\n  //console.log(location.question.answers);\n  //const {answers,text,title,questionedOn} = location.question;\n\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [questionedOn, setQuestionedOn] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  useEffect(() => {\n    QuestionsService.findQuestionById(id).then(response => {\n      console.log(response);\n      setText(response.data.text);\n      setTitle(response.data.title);\n      setQuestionedOn(response.data.questionedOn);\n      setAnswers(response.data.answers);\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(resMessage); // setMessage(resMessage);\n      // setSuccessful(false);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setAnswer(event.target.value);\n  };\n\n  const handleSubmit = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"answer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question-to-answer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Asked on \", questionedOn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"answers-container\",\n      children: answers.map(question => {\n        const {\n          id,\n          title,\n          text,\n          questionedOn\n        } = question;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/answer/\" + id,\n                question: {\n                  question\n                }\n              },\n              className: \"answer-link\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Asked on \", questionedOn]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Give your answer:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"my-answer\",\n      label: \"Multiline\",\n      multiline: true,\n      rows: 10,\n      variant: \"outlined\",\n      onChange: handleChange,\n      value: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit, \"md2JInY7Nsb4l8F3W200LH6T6rk=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/edit.component.js"],"names":["React","useState","useEffect","useLocation","useParams","Link","QuestionsService","Edit","id","text","setText","title","setTitle","questionedOn","setQuestionedOn","answers","setAnswers","answer","setAnswer","findQuestionById","then","response","console","log","data","error","resMessage","message","toString","handleChange","event","target","value","handleSubmit","map","question","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {useLocation, useParams, Link} from \"react-router-dom\";\n\nimport \"../styling/answerQuestion.css\";\nimport QuestionsService from \"../services/questions.service\";\n\nconst Edit = () => {\n  const {id} = useParams();\n  \n  //const location = useLocation();\n  //console.log(location.question.answers);\n  //const {answers,text,title,questionedOn} = location.question;\n  const [text,setText] = useState(\"\");\n  const [title,setTitle] = useState(\"\");\n  const [questionedOn,setQuestionedOn] = useState(\"\");\n  const [answers,setAnswers] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  \n  useEffect(()=> {\n    QuestionsService.findQuestionById(id).then(\n      (response) => {\n        console.log(response);\n        setText(response.data.text);\n        setTitle(response.data.title);\n        setQuestionedOn(response.data.questionedOn);\n        setAnswers(response.data.answers);\n      },\n     (error) => {\n      const resMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n          console.log(resMessage);\n      // setMessage(resMessage);\n      // setSuccessful(false);\n    })\n  },[])\n\n  const handleChange = (event) => {\n    setAnswer(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n\n  }\n\n\n  return (\n    <div className=\"answer-container\">\n      <h3>      \n          Edit question\n      </h3>\n      <div id=\"question-to-answer\" >\n        <h2>{title}</h2>\n        <div>{text}</div>\n        <div>Asked on {questionedOn}</div>\n      </div>\n      <ul className=\"answers-container\">\n        {answers.map( (question) => \n        {\n          const {id,title,text,questionedOn} = question;\n          return (\n          <li key={id}>\n          <div id=\"question\" >\n            <Link \n              to={{pathname: \"/answer/\"+id, question:{question}}} \n              className=\"answer-link\"\n            >\n              <h2>{title}</h2>\n            </Link>\n            <div>{text}</div>\n            <div>Asked on {questionedOn}</div>\n          </div>\n          </li>);\n        }\n      )}\n    </ul>\n    <label>Give your answer:</label>\n    <textarea\n      id=\"my-answer\"\n      label=\"Multiline\"\n      multiline\n      rows={10}\n      variant=\"outlined\"\n      onChange={handleChange}\n      value={answer}\n    />\n  </div>\n  );\n};\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}