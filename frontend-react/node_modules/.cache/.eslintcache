[{"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\index.js":"1","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\App.js":"2","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\signup.component.js":"3","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\login.component.js":"4","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\profile.component.js":"5","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\home.component.js":"6","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\askQuestion.component.js":"7","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\browseQuestions.component.js":"8","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\answer.component.js":"9","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth.service.js":"10","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\user.service.js":"11","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth-header.service.js":"12","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\questions.service.js":"13","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\tabPanel.component.js":"14","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\edit.component.js":"15","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\answers.service.js":"16","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\myQuestion.component.js":"17","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\myAnswer.component.js":"18","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\graph.component.js":"19","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\statistics.service.js":"20"},{"size":253,"mtime":1624194151701,"results":"21","hashOfConfig":"22"},{"size":3463,"mtime":1625672968655,"results":"23","hashOfConfig":"22"},{"size":6236,"mtime":1624194151700,"results":"24","hashOfConfig":"22"},{"size":4211,"mtime":1624194151698,"results":"25","hashOfConfig":"22"},{"size":8898,"mtime":1625837580071,"results":"26","hashOfConfig":"22"},{"size":3187,"mtime":1625834629838,"results":"27","hashOfConfig":"22"},{"size":3310,"mtime":1625672968673,"results":"28","hashOfConfig":"22"},{"size":8609,"mtime":1625672968684,"results":"29","hashOfConfig":"22"},{"size":3403,"mtime":1625672968661,"results":"30","hashOfConfig":"22"},{"size":1538,"mtime":1625835872709,"results":"31","hashOfConfig":"22"},{"size":715,"mtime":1625766255891,"results":"32","hashOfConfig":"22"},{"size":262,"mtime":1625760219748,"results":"33","hashOfConfig":"22"},{"size":1332,"mtime":1625838244044,"results":"34","hashOfConfig":"22"},{"size":2940,"mtime":1625836961324,"results":"35","hashOfConfig":"22"},{"size":2357,"mtime":1625672968688,"results":"36","hashOfConfig":"22"},{"size":722,"mtime":1625767295661,"results":"37","hashOfConfig":"22"},{"size":3049,"mtime":1625837379852,"results":"38","hashOfConfig":"22"},{"size":3004,"mtime":1625837372885,"results":"39","hashOfConfig":"22"},{"size":1800,"mtime":1625834155583,"results":"40","hashOfConfig":"22"},{"size":359,"mtime":1625834717230,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"11b26jh",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\index.js",[],["96","97"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\App.js",["98"],"import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Image4 from './logo4.png'\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component.js\";\r\nimport Signup from \"./components/signup.component.js\";\r\nimport Home from \"./components/home.component.js\";\r\nimport Profile from \"./components/profile.component.js\";\r\nimport Answer from \"./components/answer.component.js\";\r\nimport Ask from \"./components/askQuestion.component.js\";\r\nimport Edit from \"./components/edit.component.js\";\r\nimport Browse from \"./components/browseQuestions.component.js\";\r\n\r\nconst App = () => {\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  \r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo-container\">\r\n        <Link to={\"/\"}><img src={Image4} className=\"logo-img\"></img></Link>\r\n      </div>     \r\n      <header>\r\n        <ul className=\"navbar\">\r\n            <li className=\"nav-btns\">\r\n              <ul>\r\n                <li><Link to={\"/home\"} className=\"nav-link\">Home</Link></li>\r\n                <li><Link to={() => currentUser ? \"/ask\" : \"/login\"}>Ask Question</Link></li>\r\n                <li><Link to={\"/questions\"}>Browse Questions</Link></li>\r\n              </ul>\r\n            </li> \r\n            \r\n            {currentUser ? (\r\n            <li className=\"auth-btns\">\r\n              <ul>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/profile\"} className=\"nav-link\" style={{color: \"#DBCD18\"}}>\r\n                      {currentUser.username}'s\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a href=\"/home\" className=\"nav-link\" onClick={logOut}>\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              ) : (\r\n              <li className=\"auth-btns\">\r\n                <ul>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/login\"} className=\"nav-link\">\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/signup\"} className=\"signup nav-link\">\r\n                      Sign Up,It's Free\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            )}\r\n        </ul>\r\n      </header>\r\n\r\n      <div className=\"body-container container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n          <Route exact path=\"/answer/:id\"><Answer userId={currentUser ? currentUser.user.id : \"\"}/></Route>\r\n          <Route exact path=\"/edit/:id\"><Edit currentUser={currentUser}/></Route>\r\n          <Route exact path=\"/ask\" ><Ask userId={currentUser ? currentUser.user.id : \"\"}></Ask></Route>\r\n          <Route exact path=\"/questions\"><Browse currentUser={currentUser}/></Route>\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\signup.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\login.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\profile.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\home.component.js",["99"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport AuthenticationService from \"../services/auth.service\";\r\nimport AnswersService from \"../services/answers.service\";\r\nimport StatisticsService from \"../services/statistics.service\";\r\n\r\nimport BarChart from \"./graph.component\";\r\n\r\nimport \"../styling/homepage.css\";\r\n\r\nconst Home = () => {\r\n  const [questionsPerDate, setQuestionsPerDate] = useState([]);\r\n  const [questionsPerKeyword, setQuestionsPerKeyword] = useState([]);\r\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0); \r\n  const [numberOfAnswers, setNumberOfAnswers] = useState(0); \r\n  const [numberOfUsers, setNumberOfUsers] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    StatisticsService.getQuestionsPerDate().then(\r\n      (response) => {\r\n        setQuestionsPerDate(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(`Error Occured: ${error.message}`);\r\n        setQuestionsPerDate(`Error Occured: ${error.message}`);\r\n      }\r\n    );\r\n\r\n    StatisticsService.getQuestionsPerKeyword().then(\r\n      (response) => {\r\n        setQuestionsPerKeyword(response.data);\r\n      },\r\n      (error) => {        \r\n        console.log(`Error Occured: ${error.message}`);\r\n        setQuestionsPerKeyword(\"Error Occured\",error.message);\r\n      }\r\n    );\r\n\r\n    AuthenticationService.getNumberOfUsers().then(\r\n      (response) => {\r\n        setNumberOfUsers(response.data.count);\r\n      },\r\n      (error) => {\r\n        setNumberOfUsers(-1);\r\n      }\r\n    );\r\n\r\n    AnswersService.getNumberOfAnswers().then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setNumberOfAnswers(response.data.count);\r\n      },\r\n      (error) => {\r\n        // const _content =\r\n        //   (error.response && error.response.data) ||\r\n        //   error.message ||\r\n        //   error.toString();\r\n        //   console.log(_content);\r\n        setNumberOfAnswers(-1);\r\n      }\r\n    );\r\n\r\n    QuestionsService.getNumberOfQuestions().then(\r\n      (response) => {\r\n        setNumberOfQuestions(response.data.count);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n          setNumberOfQuestions(-1);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"side-stats\">\r\n        <div className=\"stats-container\">\r\n        <ul>\r\n            <li>\r\n              <h1>{numberOfQuestions}</h1>\r\n              <i>questions</i>\r\n            </li>\r\n            <li id=\"my-answers\">\r\n              <h1>{numberOfAnswers}</h1>\r\n              <i>answers</i>\r\n            </li>\r\n            <li>\r\n              <h1>{numberOfUsers}</h1>\r\n              <i>users</i>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <header className=\"jumbotron\">\r\n        <BarChart id={1} data={questionsPerKeyword.map(({word,count}) => ({label:word,value:count}))} />\r\n        <BarChart id={2} data={questionsPerDate.map(({date,count}) => ({label:date,value:count}))} />\r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\askQuestion.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\browseQuestions.component.js",["100"],"import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport \"../styling/browseQuestions.css\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst Browse = ({currentUser}) => {\r\n  const classes = useStyles();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [content, setContent] = useState([]);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  const [dateFrom, setDateFrom] = useState(\"\");\r\n  const [dateTo, setDateTo] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDateTo(\"\");\r\n    setDateFrom(\"\");\r\n    setKeyword(\"\");\r\n\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        setAllQuestions(response.data);\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const handleChangeDateFrom = (event) => setDateFrom(event.target.value)\r\n\r\n  const handleChangeDateTo = (event) => setDateTo(event.target.value)\r\n\r\n  const handleChangeKeyword = (event) => setKeyword(event.target.value)\r\n\r\n  const handleClear = () => {\r\n    setDateTo(\"\");\r\n    setDateFrom(\"\");\r\n    setKeyword(\"\");\r\n    setMessage(\"\");\r\n    setContent(allQuestions);\r\n  }\r\n\r\n  const handleApply = () => {\r\n    const stylesSuccess = {\r\n      color: 'green',\r\n      marginTop:'8px'\r\n    }\r\n    const stylesFail = {\r\n      color: 'red',\r\n      marginTop:'8px'\r\n    }\r\n\r\n    if (keyword && dateFrom && dateTo) {\r\n      const startDate = dateFrom.split(\"-\").join(\"\");\r\n      const endDate = dateTo.split(\"-\").join(\"\");\r\n      setMessage(\r\n        <div style={stylesSuccess}>\r\n          Filters Applied!\r\n        </div>\r\n      );\r\n      QuestionsService.filterQuestionsByKeywordAndDate(startDate, endDate, keyword).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else if ((keyword && dateTo) || (keyword && dateFrom) || (!dateFrom && dateTo) || (dateFrom && !dateTo)) {\r\n      setMessage(\r\n        <div style={stylesFail}>\r\n          Provide both dates.\r\n        </div>\r\n      )\r\n    }      \r\n    else if (keyword) {\r\n      setMessage(\r\n        <div style={stylesSuccess}>\r\n          Filter Applied!\r\n        </div>\r\n      )\r\n      QuestionsService.filterQuestionsByKeyword(keyword).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else if (dateFrom && dateTo) {\r\n      const startDate = dateFrom.split(\"-\").join(\"\");\r\n      const endDate = dateTo.split(\"-\").join(\"\");\r\n\r\n      QuestionsService.filterQuestionsByDate(startDate, endDate).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else {\r\n      setMessage(\r\n        <div style={stylesFail}>\r\n          No Filters Applied!\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"browse-container\">\r\n      <div className=\"side-container\">\r\n        <div className=\"filter-container\">\r\n          <h2 id=\"filter-heading\">Filter Questions By :</h2>\r\n            <div className=\"filter-by-date-container\">\r\n              <h3>Date</h3>\r\n              <div className=\"filter-by-date\">\r\n                <form className={classes.container} noValidate>\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date from\"\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  value={dateFrom}\r\n                  onChange={handleChangeDateFrom}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                </form>\r\n                <form className={classes.container} noValidate>\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date to\"\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  value={dateTo}\r\n                  onChange={handleChangeDateTo}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"filter-by-keyword-container\">\r\n              <h3>Keyword</h3>\r\n              <div>\r\n                <input \r\n                  id=\"keyword-input\"\r\n                  onChange={handleChangeKeyword}\r\n                  value={keyword}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n            )}\r\n\r\n            <div className=\"btns-container\">\r\n              <button className=\"submit-btn\" onClick={handleApply}>\r\n                Apply\r\n              </button>\r\n              <button className=\"cancel-btn\" onClick={handleClear}>\r\n                Clear\r\n              </button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"questions-container\">        \r\n        {(typeof content == 'string') \r\n        ? content \r\n        : (\r\n          (!content.length)\r\n          ? \r\n          (<div className=\"loader\">\r\n          </div>)\r\n          : (currentUser \r\n            ? (\r\n            <ul className=\"questions-container\">\r\n              {content.map( (question) => \r\n                {\r\n                  const {id,title,text,questionedOn,keywords} = question;\r\n                  return (\r\n                  <li key={id}>\r\n                    <div id=\"question\" >\r\n                      <Link \r\n                        to={{pathname: \"/answer/\"+id}} \r\n                        className=\"answer-link\"\r\n                      >\r\n                        <h2 className=\"title\">{title}</h2>\r\n                      </Link>\r\n                      <div>{text}</div>\r\n                      <ul className=\"keywords\">\r\n                        {\r\n                          keywords.map(({word}) => \r\n                            <li>{word}</li>\r\n                          )\r\n                        }\r\n                      </ul>\r\n                      <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\r\n                    </div>\r\n                  </li>);\r\n                }\r\n            )}\r\n            </ul>\r\n            ) : (\r\n            <ul className=\"questions-container\">\r\n            {content.slice(0,10).map( (question) => \r\n              {\r\n                const {id,title,text,questionedOn,keywords} = question;\r\n                return ( \r\n                <li id=\"question\" key={id}>\r\n                  <Link \r\n                      to={{pathname: \"/answer/\"+id, question}} \r\n                      className=\"answer-link\"\r\n                  >\r\n                    <h2>{title}</h2>\r\n                  </Link>\r\n                  <div>{text}</div>\r\n                  <ul className=\"keywords\">\r\n                    {\r\n                      keywords.map((keyword) => {\r\n                        <li>{keyword}</li>\r\n                      })\r\n                    }\r\n                  </ul>\r\n                  <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\r\n                </li>\r\n                )\r\n              }\r\n            )}\r\n            </ul>          \r\n          ))\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\answer.component.js",["101"],"import React, { useState, useEffect } from \"react\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\n\r\nimport \"../styling/answerQuestion.css\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport AnswersService from \"../services/answers.service\";\r\n\r\nconst Question = ({userId}) => {\r\n  const {id} = useParams();\r\n  const history = useHistory();\r\n  \r\n  const [text,setText] = useState(\"\");\r\n  const [title,setTitle] = useState(\"\");\r\n  const [keywords,setKeywords] = useState([]);\r\n  const [questionedOn,setQuestionedOn] = useState(\"\");\r\n  const [answers,setAnswers] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [submitted,setSubmitted] = useState(false);\r\n  \r\n  useEffect(()=> {\r\n    QuestionsService.findQuestionById(id).then(\r\n      (response) => {\r\n        setText(response.data.text);\r\n        setTitle(response.data.title);\r\n        setKeywords(response.data.keywords);\r\n        setQuestionedOn(response.data.questionedOn);\r\n        setAnswers(response.data.answers);\r\n      },\r\n     (error) => {\r\n      const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n          console.log(resMessage);\r\n    })\r\n  },[])\r\n\r\n  const handleChange = (event) => {\r\n    setAnswer(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    AnswersService.createAnswer(answer,userId,id).then(() => {\r\n      setSubmitted(true);\r\n    })\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/questions\");\r\n  }\r\n\r\n  const handleNewAnswer = () => {\r\n    setSubmitted(false);\r\n    setAnswer('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"answer-container\">\r\n      <h3>      \r\n          Answer a question\r\n      </h3>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>Answer Submitted Succesfully</h4>\r\n          <button onClick={handleNewAnswer}>Give Another Answer</button>\r\n        </div>\r\n      ):(\r\n      !title ?\r\n      <div className=\"loader\">\r\n      </div>\r\n      : \r\n      <>\r\n      <div className=\"question\">\r\n        <h2 contentEditable=\"true\">{title}</h2>\r\n        <div>{text}</div>\r\n        <ul className=\"keywords\">\r\n          {\r\n            keywords.map(({word}) => \r\n              <li>{word}</li>\r\n            )\r\n          }\r\n        </ul>\r\n        <div><span className=\"small-caps\">asked on: </span>{questionedOn}</div>\r\n      </div>\r\n\r\n      <h2>Answers({answers.length})</h2>\r\n      {answers.length ?\r\n        (<ul>                    \r\n            {answers.map(({text,answeredOn}) => \r\n              <li className=\"answer\">\r\n                <div className=\"answer-text\">{text}</div>\r\n                \r\n                <div><span className=\"small-caps\">answered on:</span> {answeredOn}</div>\r\n              </li>\r\n            )}\r\n        </ul>\r\n        ):(\r\n          []\r\n        )\r\n      }\r\n\r\n    <h2>Give your answer:</h2>\r\n    <textarea\r\n      id=\"my-answer\"\r\n      label=\"Multiline\"\r\n      multiline\r\n      rows={8}\r\n      variant=\"outlined\"\r\n      onChange={handleChange}\r\n      value={answer}\r\n    />\r\n    <div className=\"btns-container\">\r\n      <button className=\"submit-btn\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n      <button className=\"cancel-btn\" onClick={handleCancel}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n    </>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth.service.js",["102"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header.service\";\r\n\r\nconst API_URL = \"http://localhost:4000/\";\r\n\r\nconst register = (username, email, password, fullName) => {\r\n  return axios.post(API_URL + \"auth/user/signup/\", {\r\n    username,    \r\n    password,\r\n    email,\r\n    fullName\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"auth/signin/\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      //temporary solution\r\n      response.data[\"username\"]=username;\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getAllUsers = (userid) => {\r\n  return axios.get(API_URL + \"auth/user/findusers/\",{userid},{headers: authHeader()});\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst deleteCurrentUser = (username) => {\r\n  return axios.post(API_URL + \"auth/user/deleteuser/\",{username},{headers: authHeader()});\r\n};\r\n\r\nconst updatePassword = (username,password) => {\r\n  return axios.post(API_URL + \"auth/user/updatepassword/\",{username,password},{headers: authHeader()});\r\n};\r\n\r\nconst getNumberOfUsers = () => {\r\n  return axios.get(API_URL + \"auth/user/countusers\");\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getAllUsers,\r\n  deleteCurrentUser,\r\n  updatePassword,\r\n  getNumberOfUsers\r\n};","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\user.service.js",["103"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header.service\";\r\n\r\nconst API_URL = \"http://localhost:5000/\";\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"qa/question/findquestions\");\r\n};\r\n\r\n\r\nconst getAllQuestions = () => {\r\n  return axios.get(API_URL + \"qa/question/findquestions\");\r\n};\r\n\r\nconst getUserQuestions = (userid) => {\r\n  return axios.post(API_URL + \"qa/question/findquestionsbyuserid\",{userid},{headers: authHeader()});\r\n};\r\n\r\nconst getUserAnswers = (userid) => {\r\n  return axios.post(API_URL + \"qa/answer/findanswersbyuserid\",{userid},{headers: authHeader()});\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getUserQuestions,\r\n  getAllQuestions,\r\n  getUserAnswers\r\n};","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth-header.service.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\questions.service.js",["104"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header.service\";\r\n\r\nconst API_URL = \"http://localhost:5000/\";\r\n\r\nconst createQuestion = (question) => {\r\n  return axios.post(API_URL + \"qa/question/createquestion\", question,{headers: { 'x-auth-token':\"hdfsghdshdfs56343\"}});\r\n};\r\n\r\nconst deleteQuestion = (id) => {\r\n  return axios.post(API_URL + \"qa/question/deletequestion\", { id },{headers: authHeader()});\r\n};\r\n  \r\nconst findQuestionById = (id) => {\r\n  return axios.post(API_URL + \"qa/question/findquestionbyid\", { id },{headers: authHeader()});\r\n};\r\n\r\nconst filterQuestionsByKeywordAndDate = (startDate, endDate, word) => {\r\n  return axios.post(API_URL + \"qa/question/findquestionsbydateandkeyword\", {startDate, endDate, word});\r\n};\r\n\r\nconst filterQuestionsByKeyword = (word) => {\r\n  return axios.post(API_URL + \"qa/question/findquestionsbykeyword\", {word});\r\n};\r\n\r\nconst filterQuestionsByDate = (startDate, endDate) => {\r\n  return axios.post(API_URL + \"qa/question/findquestionsbydate\", {startDate, endDate});\r\n};\r\n\r\nconst getNumberOfQuestions = () => {\r\n  return axios.get(API_URL + \"qa/question/countquestions\");\r\n};\r\n  \r\nexport default {\r\n  createQuestion,\r\n  findQuestionById,\r\n  filterQuestionsByKeywordAndDate,\r\n  filterQuestionsByKeyword,\r\n  filterQuestionsByDate,\r\n  getNumberOfQuestions,\r\n  deleteQuestion\r\n};","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\tabPanel.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\edit.component.js",["105"],"import React, { useState, useEffect } from \"react\";\r\nimport {useParams, Link} from \"react-router-dom\";\r\n\r\nimport \"../styling/answerQuestion.css\";\r\nimport QuestionsService from \"../services/questions.service\";\r\n\r\nconst Edit = () => {\r\n  const {id} = useParams();\r\n  \r\n  const [text,setText] = useState(\"\");\r\n  const [title,setTitle] = useState(\"\");\r\n  const [questionedOn,setQuestionedOn] = useState(\"\");\r\n  const [answers,setAnswers] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  \r\n  useEffect(()=> {\r\n    QuestionsService.findQuestionById(id).then(\r\n      (response) => {\r\n        console.log(response);\r\n        setText(response.data.text);\r\n        setTitle(response.data.title);\r\n        setQuestionedOn(response.data.questionedOn);\r\n        setAnswers(response.data.answers);\r\n      },\r\n     (error) => {\r\n      const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n          console.log(resMessage);\r\n      // setMessage(resMessage);\r\n      // setSuccessful(false);\r\n    })\r\n  },[])\r\n\r\n  const handleChange = (event) => {\r\n    setAnswer(event.target.value);\r\n  }\r\n\r\n  // const handleSubmit = (event) => {\r\n\r\n  // }\r\n\r\n\r\n  return (\r\n    <div className=\"answer-container\">\r\n      <h3>      \r\n          Edit question\r\n      </h3>\r\n      <div id=\"question-to-answer\" >\r\n        <h2>{title}</h2>\r\n        <div>{text}</div>\r\n        <div>Asked on {questionedOn}</div>\r\n      </div>\r\n      <ul className=\"answers-container\">\r\n        {answers.map( (question) => \r\n        {\r\n          const {id,title,text,questionedOn} = question;\r\n          return (\r\n          <li key={id}>\r\n          <div id=\"question\" >\r\n            <Link \r\n              to={{pathname: \"/answer/\"+id, question:{question}}} \r\n              className=\"answer-link\"\r\n            >\r\n              <h2>{title}</h2>\r\n            </Link>\r\n            <div>{text}</div>\r\n            <div>Asked on {questionedOn}</div>\r\n          </div>\r\n          </li>);\r\n        }\r\n      )}\r\n    </ul>\r\n    <label>Give your answer:</label>\r\n    <textarea\r\n      id=\"my-answer\"\r\n      label=\"Multiline\"\r\n      multiline\r\n      rows={10}\r\n      variant=\"outlined\"\r\n      onChange={handleChange}\r\n      value={answer}\r\n    />\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Edit;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\answers.service.js",["106"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header.service\";\r\n\r\nconst API_URL = \"http://localhost:5000/\";\r\n\r\nconst createAnswer = (text,userId,questionId) => {\r\n  return axios.post(API_URL + \"qa/answer/createanswer\", {text,userId,questionId},{headers: authHeader()});\r\n};\r\n\r\nconst getAllAnswers = () => {\r\n  return axios.get(API_URL + \"qa/answer/findanswers\");\r\n};\r\n\r\nconst deleteAnswer = (answerId) => {\r\n  return axios.post(API_URL + \"qa/answer/deleteanswer\",{id: answerId}, {headers: authHeader()});\r\n};\r\n\r\nconst getNumberOfAnswers = () => {\r\n  return axios.get(API_URL + \"qa/answer/countanswers\");\r\n};\r\n\r\n  \r\nexport default {\r\n  createAnswer,\r\n  getAllAnswers,\r\n  getNumberOfAnswers,\r\n  deleteAnswer\r\n};","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\myQuestion.component.js",["107","108"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"../styling/profile.css\";\r\n\r\nconst MyQuestion = ({question, handleDelete}) => {\r\n  const {id,title,text,questionedOn,keywords,answers} = question;\r\n  const [editQuestion,setEditQuestion] = useState(false);  \r\n  const [questionText,setQuestionText] = useState(text);\r\n\r\n  const handleEditQuestion = () => editQuestion ? (setQuestionText(text),setEditQuestion(!editQuestion)): setEditQuestion(!editQuestion)\r\n\r\n  const handleDeleteQuestion = () => {\r\n    console.log(\"delete question\")\r\n  }\r\n\r\n  const handleChangeText = (event) => setQuestionText(event.target.value)\r\n\r\n    return (\r\n        <li key={id}>\r\n            <div id=\"question\">\r\n                <div className=\"edit-container\">\r\n                    {/* <input id=\"change-title\" value={questionTitle} onChange={handleChangeTitle}></input> */}\r\n                    <h2 className=\"title\">{title}</h2>\r\n                    {\r\n                        editQuestion\r\n                            ? (<div>\r\n                                <i className=\"fa fa-check underline\" style={{ fontSize: \"20px\", color: \"green\"}}> apply</i>\r\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleEditQuestion}>cancel</i>\r\n                            </div>)\r\n                            : (<div>\r\n                                <i className='fas fa-pen underline' style={{ fontSize: \"20px\", color: \"grey\" }} onClick={handleEditQuestion}>edit</i>\r\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={() => handleDelete(id,\"accept-delete-question\")}> delete question</i>\r\n                            </div>\r\n                            )\r\n                    }\r\n                </div>\r\n\r\n                {editQuestion\r\n                    ? <textarea rows={3} id=\"change-text\" value={questionText} onChange={handleChangeText}></textarea>\r\n                    : <div>{questionText}</div>\r\n                }\r\n                \r\n                <ul className=\"keywords\">\r\n                    {\r\n                        keywords.map(({ word }) =>\r\n                            <li>{word}</li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <div><span className=\"small-caps\">answered on: </span> {questionedOn}</div>\r\n\r\n            </div>\r\n            <h2>Answers({answers.length})</h2>\r\n            {answers.length ?\r\n                (<ul>\r\n                    {answers.map(({ text, answeredOn }) =>\r\n                        <li className=\"answer\">\r\n                            <div className=\"answer-text\">{text}</div>\r\n                            <div><span className=\"small-caps\">asked on: </span> {answeredOn}</div>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                ) : (\r\n                    []\r\n                )\r\n            }\r\n        </li>);\r\n}\r\n\r\nexport default MyQuestion;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\myAnswer.component.js",["109","110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styling/browseQuestions.css\";\r\n\r\nimport \"../styling/profile.css\";\r\n\r\nconst MyAnswer = ({answer,handleDelete}) => {\r\n    const {id,text,answeredOn,question} = answer;\r\n    const [editAnswer,setEditAnswer] = useState(false);\r\n    const [answerText,setAnswerText] = useState(text);\r\n\r\n    const handleEditAnswer = () => editAnswer ? (setAnswerText(text),setEditAnswer(!editAnswer)): setEditAnswer(!editAnswer)\r\n\r\n    // const handleDeleteAnswer = () => {\r\n    //     console.log(\"DELETE ANSWER\")\r\n    //     const profileSettings = document.getElementById(\"accept-delete\");\r\n    //     profileSettings.style.display = \"block\";\r\n    // }\r\n\r\n    const handleAcceptDelete = () => {\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n    }\r\n\r\n    // const handleCancel = () => {\r\n    //     const profileSettings = document.getElementById(\"accept-delete\");\r\n    //     profileSettings.style.display = \"none\";\r\n    // }\r\n\r\n    const handleChangeText = (event) => setAnswerText(event.target.value)\r\n\r\n    return (\r\n        <li key={id}>\r\n            <div className=\"answer\">\r\n                <div className=\"edit-container\" id=\"flex-end\"> \r\n                    {\r\n                    editAnswer\r\n                    ? (<div>\r\n                            <i className=\"fa fa-check underline\" style={{ fontSize: \"20px\", color: \"green\"}}> apply</i>\r\n                            <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleEditAnswer}>cancel</i>\r\n                        </div>)\r\n                    : (<div>\r\n                            <i className='fas fa-pen underline' style={{ fontSize: \"20px\", color: \"grey\" }} onClick={handleEditAnswer}>edit</i>\r\n                            <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={() => handleDelete(id,\"accept-delete-answer\")}> delete answer</i>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </div>\r\n\r\n                {editAnswer\r\n                    ? <input id=\"change-text\" value={answerText} onChange={handleChangeText}></input>\r\n                    : <div className=\"answer-text\">{answerText}</div>\r\n                }\r\n                <div><span className=\"small-caps\">asked on: </span> {answeredOn}</div>\r\n\r\n                \r\n\r\n            </div>\r\n\r\n            <h2>Question Answered</h2>\r\n            <div id=\"question\" >\r\n                <h2 className=\"title\">{question.title}</h2>                      \r\n\r\n                <ul className=\"keywords\">\r\n                    {\r\n                    question.keywords.map(({ word }) =>\r\n                        <li>{word}</li>\r\n                    )\r\n                    }\r\n                </ul>\r\n                <div><span className=\"small-caps\">answered on: </span> {question.questionedOn}</div>\r\n\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default MyAnswer;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\graph.component.js",["112"],"import React, { useEffect } from 'react';\r\nimport {\r\n  axisBottom,\r\n  axisLeft,\r\n  scaleBand,\r\n  scaleLinear,\r\n  scaleOrdinal,\r\n  schemeDark2,\r\n  select,\r\n} from 'd3';\r\n\r\nconst margin = {\r\n  top: 10, right: 30, bottom: 80, left: 60,\r\n};\r\nconst width = 800 - margin.left - margin.right;\r\nconst height = 400 - margin.top - margin.bottom;\r\n\r\nconst BarChart = ({ id, data }) => {\r\n  useEffect(() => {\r\n    \r\n    const color = scaleOrdinal()\r\n      .domain(data.map(({ label }) => label))\r\n      .range(schemeDark2);\r\n\r\n    const svg = select(`#bar-chart-${id}`)\r\n      .append('svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform',\r\n        `translate(${margin.left},${margin.top})`);\r\n\r\n    const x = scaleBand()\r\n      .range([0, width])\r\n      .domain(data.map((d) => d.label))\r\n      .padding(0.2);\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height})`)\r\n      .call(axisBottom(x))\r\n      .selectAll('text')\r\n      .attr('transform', 'translate(-10,0)rotate(-45)')\r\n      .style('text-anchor', 'end');\r\n\r\n    const maxValue = Math.max(...data.map(({ value }) => value));\r\n    const y = scaleLinear()\r\n      .domain([0, maxValue])\r\n      .range([height, 0]);\r\n    svg.append('g')\r\n      .call(axisLeft(y));\r\n\r\n    svg.selectAll('mybar')\r\n      .data(data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', (d) => x(d.label))\r\n      .attr('y', (d) => y(d.value))\r\n      .attr('width', x.bandwidth())\r\n      .attr('height', (d) => height - y(d.value))\r\n      .attr('fill', (d) => color(d.label));\r\n\r\n    return () => select(svg.node().parentElement).remove();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div id={`bar-chart-${id}`} />\r\n  );\r\n};\r\n\r\nexport default BarChart;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\statistics.service.js",["113"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5001/\";\r\n\r\nconst getQuestionsPerKeyword = () => {\r\n    return axios.get(API_URL + \"stat/questionsperkeyword\");\r\n};\r\n\r\nconst getQuestionsPerDate = () => {\r\n    return axios.get(API_URL + \"stat/questionsperdate\");\r\n};\r\n  \r\nexport default {\r\n    getQuestionsPerKeyword,\r\n    getQuestionsPerDate\r\n};",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":36,"column":24,"nodeType":"120","endLine":36,"endColumn":63},{"ruleId":"121","severity":1,"message":"122","line":70,"column":15,"nodeType":"123","messageId":"124","endLine":70,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":275,"column":46,"nodeType":"127","messageId":"128","endLine":275,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":38,"column":5,"nodeType":"131","endLine":38,"endColumn":7,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":56,"column":1,"nodeType":"135","endLine":65,"endColumn":3},{"ruleId":"133","severity":1,"message":"134","line":23,"column":1,"nodeType":"135","endLine":28,"endColumn":3},{"ruleId":"133","severity":1,"message":"134","line":34,"column":1,"nodeType":"135","endLine":42,"endColumn":3},{"ruleId":"129","severity":1,"message":"130","line":36,"column":5,"nodeType":"131","endLine":36,"endColumn":7,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"134","line":23,"column":1,"nodeType":"135","endLine":28,"endColumn":3},{"ruleId":"121","severity":1,"message":"137","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"138","line":12,"column":9,"nodeType":"123","messageId":"124","endLine":12,"endColumn":29},{"ruleId":"121","severity":1,"message":"137","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"139","line":19,"column":11,"nodeType":"123","messageId":"124","endLine":19,"endColumn":29},{"ruleId":"121","severity":1,"message":"140","line":23,"column":11,"nodeType":"123","messageId":"124","endLine":23,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":62,"column":6,"nodeType":"131","endLine":62,"endColumn":12,"suggestions":"141"},{"ruleId":"133","severity":1,"message":"134","line":13,"column":1,"nodeType":"135","endLine":16,"endColumn":3},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'_content' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["144"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["145"],"'useEffect' is defined but never used.","'handleDeleteQuestion' is assigned a value but never used.","'handleAcceptDelete' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [id]",{"range":"152","text":"153"},{"range":"154","text":"153"},"Update the dependencies array to be: [data, id]",{"range":"155","text":"156"},[1286,1288],"[id]",[1127,1129],[1704,1710],"[data, id]"]