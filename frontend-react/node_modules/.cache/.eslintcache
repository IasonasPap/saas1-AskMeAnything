[{"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\index.js":"1","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\App.js":"2","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\signup.component.js":"3","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\login.component.js":"4","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\profile.component.js":"5","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\home.component.js":"6","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\askQuestion.component.js":"7","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\browseQuestions.component.js":"8","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\answer.component.js":"9","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth.service.js":"10","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\user.service.js":"11","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth-header.service.js":"12","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\questions.service.js":"13","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\tabPanel.component.js":"14","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\edit.component.js":"15","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\answers.service.js":"16"},{"size":253,"mtime":1624194151701,"results":"17","hashOfConfig":"18"},{"size":3461,"mtime":1624401988212,"results":"19","hashOfConfig":"18"},{"size":6236,"mtime":1624194151700,"results":"20","hashOfConfig":"18"},{"size":4211,"mtime":1624194151698,"results":"21","hashOfConfig":"18"},{"size":2979,"mtime":1625499994980,"results":"22","hashOfConfig":"18"},{"size":2442,"mtime":1625023628485,"results":"23","hashOfConfig":"18"},{"size":3304,"mtime":1624401010871,"results":"24","hashOfConfig":"18"},{"size":8668,"mtime":1625021512277,"results":"25","hashOfConfig":"18"},{"size":3475,"mtime":1624992100898,"results":"26","hashOfConfig":"18"},{"size":1011,"mtime":1625021812261,"results":"27","hashOfConfig":"18"},{"size":530,"mtime":1625022787937,"results":"28","hashOfConfig":"18"},{"size":264,"mtime":1624194151703,"results":"29","hashOfConfig":"18"},{"size":995,"mtime":1624987865372,"results":"30","hashOfConfig":"18"},{"size":4375,"mtime":1624989376931,"results":"31","hashOfConfig":"18"},{"size":2512,"mtime":1624375676017,"results":"32","hashOfConfig":"18"},{"size":417,"mtime":1625023267195,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11b26jh",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\index.js",[],["76","77"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\App.js",["78"],"import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Image4 from './logo4.png'\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component.js\";\r\nimport Signup from \"./components/signup.component.js\";\r\nimport Home from \"./components/home.component.js\";\r\nimport Profile from \"./components/profile.component.js\";\r\nimport Answer from \"./components/answer.component.js\";\r\nimport Ask from \"./components/askQuestion.component.js\";\r\nimport Edit from \"./components/edit.component.js\";\r\nimport Browse from \"./components/browseQuestions.component.js\";\r\n\r\nconst App = () => {\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  \r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo-container\">\r\n        <Link to={\"/\"}><img src={Image4} className=\"logo-img\"></img></Link>\r\n      </div>     \r\n      <header>\r\n        <ul className=\"navbar\">\r\n            <li className=\"nav-btns\">\r\n              <ul>\r\n                <li><Link to={\"/home\"} className=\"nav-link\">Home</Link></li>\r\n                <li><Link to={() => currentUser ? \"/ask\" : \"/login\"}>Ask Question</Link></li>\r\n                <li><Link to={\"/questions\"}>Browse Questions</Link></li>\r\n              </ul>\r\n            </li> \r\n            \r\n            {currentUser ? (\r\n            <li className=\"auth-btns\">\r\n              <ul>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/profile\"} className=\"nav-link\" style={{color: \"#DBCD18\"}}>\r\n                      {currentUser.username}'s\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a href=\"/home\" className=\"nav-link\" onClick={logOut}>\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              ) : (\r\n              <li className=\"auth-btns\">\r\n                <ul>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/login\"} className=\"nav-link\">\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/signup\"} className=\"signup nav-link\">\r\n                      Sign Up,It's Free\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            )}\r\n        </ul>\r\n      </header>\r\n\r\n      <div className=\"body-container container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n          <Route exact path=\"/answer/:id\"><Answer userId={currentUser ? currentUser.user.id : \"\"}/></Route>\r\n          <Route exact path=\"/edit/:id\"><Edit currentUser={currentUser}/></Route>\r\n          <Route exact path=\"/ask\" ><Ask userId={currentUser ? currentUser.user.id : \"\"}></Ask></Route>\r\n          <Route exact path=\"/questions\"><Browse currentUser={currentUser}/></Route>\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\signup.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\login.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\profile.component.js",["79"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\home.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\askQuestion.component.js",["80","81","82"],"import React, { useEffect } from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport \"../styling/askQuestion.css\";\r\n\r\nimport QuestionsService from \"../services/questions.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default function Question({userId}) {\r\n  const history = useHistory();\r\n  const [title, setTitle] = React.useState('');\r\n  const [text, setText] = React.useState('');\r\n  const [keywordsString, setKeywords] = React.useState('');\r\n\r\n  const [submitted,setSubmitted] = React.useState(false);\r\n\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleTextChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleKeywordsChange = (event) => {\r\n    setKeywords(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const keywords = keywordsString.split(',');\r\n    QuestionsService.createQuestion({title,text,userId,keywords}).then(\r\n      (response) => {\r\n        console.log(response);\r\n        console.log(\"Question Submitted\")\r\n        setSubmitted(true);\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        console.log(resMessage);\r\n      }\r\n    );   \r\n  }\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/home\");\r\n  }\r\n\r\n  const handleNewQuestion = () => {\r\n    setSubmitted(false);\r\n    setTitle('');\r\n    setText('');\r\n    setKeywords('');\r\n  }\r\n\r\n  return (\r\n    \r\n    <div class=\"ask-question-container\">\r\n    { submitted ? (\r\n      <div>\r\n        <h4>Question Submitted Succesfully</h4>\r\n        <button onClick={handleNewQuestion}>New Question</button>\r\n      </div>\r\n    ):(\r\n    <>\r\n    <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <h3 className=\"label-container\">Question Title :</h3>\r\n        <textarea\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={1}\r\n          variant=\"outlined\"\r\n          onChange={handleTitleChange}\r\n          value={title}\r\n        />\r\n        <h3 className=\"label-container\">Question Text :</h3>\r\n        <textarea\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={8}\r\n          variant=\"outlined\"\r\n          onChange={handleTextChange}\r\n          value={text}\r\n        />\r\n        <h3 className=\"label-container\">Keywords :</h3>\r\n        <textarea\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          placeholder=\"Keywords seperated with commas\"\r\n          multiline\r\n          rows={1}\r\n          onChange={handleKeywordsChange}\r\n          value={keywordsString}\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n      <div className=\"btns-container\">\r\n      <button className=\"submit-btn\">\r\n        Submit\r\n      </button>\r\n      <button className=\"cancel-btn\" onClick={handleCancel}>\r\n        Cancel\r\n      </button>\r\n      </div>\r\n    </form>\r\n    \r\n    </>\r\n    )\r\n    }\r\n    </div>\r\n  );\r\n}","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\browseQuestions.component.js",["83"],"import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport \"../styling/browseQuestions.css\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst Browse = ({currentUser}) => {\r\n  const classes = useStyles();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [content, setContent] = useState([]);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  const [dateFrom, setDateFrom] = useState(\"\");\r\n  const [dateTo, setDateTo] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDateTo(\"\");\r\n    setDateFrom(\"\");\r\n    setKeyword(\"\");\r\n\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        console.log(\"OK\");\r\n        setAllQuestions(response.data);\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(\"ERROR\");\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const handleChangeDateFrom = (event) => setDateFrom(event.target.value)\r\n\r\n  const handleChangeDateTo = (event) => setDateTo(event.target.value)\r\n\r\n  const handleChangeKeyword = (event) => setKeyword(event.target.value)\r\n\r\n  const handleClear = () => {\r\n    setDateTo(\"\");\r\n    setDateFrom(\"\");\r\n    setKeyword(\"\");\r\n    setMessage(\"\");\r\n    setContent(allQuestions);\r\n  }\r\n\r\n  const handleApply = () => {\r\n    const stylesSuccess = {\r\n      color: 'green',\r\n      marginTop:'8px'\r\n    }\r\n    const stylesFail = {\r\n      color: 'red',\r\n      marginTop:'8px'\r\n    }\r\n\r\n    if (keyword && dateFrom && dateTo) {\r\n      const startDate = dateFrom.split(\"-\").join(\"\");\r\n      const endDate = dateTo.split(\"-\").join(\"\");\r\n      setMessage(\r\n        <div style={stylesSuccess}>\r\n          Filters Applied!\r\n        </div>\r\n      );\r\n      QuestionsService.filterQuestionsByKeywordAndDate(startDate, endDate, keyword).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else if ((keyword && dateTo) || (keyword && dateFrom) || (!dateFrom && dateTo) || (dateFrom && !dateTo)) {\r\n      setMessage(\r\n        <div style={stylesFail}>\r\n          Provide both dates.\r\n        </div>\r\n      )\r\n    }      \r\n    else if (keyword) {\r\n      setMessage(\r\n        <div style={stylesSuccess}>\r\n          Filter Applied!\r\n        </div>\r\n      )\r\n      QuestionsService.filterQuestionsByKeyword(keyword).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else if (dateFrom && dateTo) {\r\n      const startDate = dateFrom.split(\"-\").join(\"\");\r\n      const endDate = dateTo.split(\"-\").join(\"\");\r\n\r\n      QuestionsService.filterQuestionsByDate(startDate, endDate).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else {\r\n      setMessage(\r\n        <div style={stylesFail}>\r\n          No Filters Applied!\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"browse-container\">\r\n      <div className=\"side-container\">\r\n        <div className=\"filter-container\">\r\n          <h2 id=\"filter-heading\">Filter Questions By :</h2>\r\n            <div className=\"filter-by-date-container\">\r\n              <h3>Date</h3>\r\n              <div className=\"filter-by-date\">\r\n                <form className={classes.container} noValidate>\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date from\"\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  value={dateFrom}\r\n                  onChange={handleChangeDateFrom}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                </form>\r\n                <form className={classes.container} noValidate>\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date to\"\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  value={dateTo}\r\n                  onChange={handleChangeDateTo}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"filter-by-keyword-container\">\r\n              <h3>Keyword</h3>\r\n              <div>\r\n                <input \r\n                  id=\"keyword-input\"\r\n                  onChange={handleChangeKeyword}\r\n                  value={keyword}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n            )}\r\n\r\n            <div className=\"btns-container\">\r\n              <button className=\"submit-btn\" onClick={handleApply}>\r\n                Apply\r\n              </button>\r\n              <button className=\"cancel-btn\" onClick={handleClear}>\r\n                Clear\r\n              </button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"questions-container\">        \r\n        {(typeof content == 'string') \r\n        ? content \r\n        : (\r\n          (!content.length)\r\n          ? \r\n          (<div className=\"loader\">\r\n          </div>)\r\n          : (currentUser \r\n            ? (\r\n            <ul className=\"questions-container\">\r\n              {content.map( (question) => \r\n                {\r\n                  const {id,title,text,questionedOn,keywords} = question;\r\n                  return (\r\n                  <li key={id}>\r\n                    <div id=\"question\" >\r\n                      <Link \r\n                        to={{pathname: \"/answer/\"+id}} \r\n                        className=\"answer-link\"\r\n                      >\r\n                        <h2 className=\"title\">{title}</h2>\r\n                      </Link>\r\n                      <div>{text}</div>\r\n                      <ul className=\"keywords\">\r\n                        {\r\n                          keywords.map(({word}) => \r\n                            <li>{word}</li>\r\n                          )\r\n                        }\r\n                      </ul>\r\n                      <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\r\n                    </div>\r\n                  </li>);\r\n                }\r\n            )}\r\n            </ul>\r\n            ) : (\r\n            <ul className=\"questions-container\">\r\n            {content.slice(0,10).map( (question) => \r\n              {\r\n                const {id,title,text,questionedOn,keywords} = question;\r\n                return ( \r\n                <li id=\"question\" key={id}>\r\n                  <Link \r\n                      to={{pathname: \"/answer/\"+id, question}} \r\n                      className=\"answer-link\"\r\n                  >\r\n                    <h2>{title}</h2>\r\n                  </Link>\r\n                  <div>{text}</div>\r\n                  <ul className=\"keywords\">\r\n                    {\r\n                      keywords.map((keyword) => {\r\n                        <li>{keyword}</li>\r\n                      })\r\n                    }\r\n                  </ul>\r\n                  <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\r\n                </li>\r\n                )\r\n              }\r\n            )}\r\n            </ul>          \r\n          ))\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\answer.component.js",["84","85"],"import React, { useState, useEffect } from \"react\";\r\nimport {useParams, Link, useHistory} from \"react-router-dom\";\r\n\r\nimport \"../styling/answerQuestion.css\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport AnswersService from \"../services/answers.service\";\r\n\r\nconst Question = ({userId}) => {\r\n  const {id} = useParams();\r\n  const history = useHistory();\r\n  \r\n  const [text,setText] = useState(\"\");\r\n  const [title,setTitle] = useState(\"\");\r\n  const [keywords,setKeywords] = useState([]);\r\n  const [questionedOn,setQuestionedOn] = useState(\"\");\r\n  const [answers,setAnswers] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [submitted,setSubmitted] = useState(false);\r\n  \r\n  useEffect(()=> {\r\n    QuestionsService.findQuestionById(id).then(\r\n      (response) => {\r\n        setText(response.data.text);\r\n        setTitle(response.data.title);\r\n        setKeywords(response.data.keywords);\r\n        setQuestionedOn(response.data.questionedOn);\r\n        setAnswers(response.data.answers);\r\n      },\r\n     (error) => {\r\n      const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n          console.log(resMessage);\r\n      // setMessage(resMessage);\r\n      // setSuccessful(false);\r\n    })\r\n  },[])\r\n\r\n  const handleChange = (event) => {\r\n    setAnswer(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    AnswersService.createAnswer(answer,userId,id).then(() => {\r\n      setSubmitted(true);\r\n    })\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/questions\");\r\n  }\r\n\r\n  const handleNewAnswer = () => {\r\n    setSubmitted(false);\r\n    setAnswer('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"answer-container\">\r\n      <h3>      \r\n          Answer a question\r\n      </h3>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>Answer Submitted Succesfully</h4>\r\n          <button onClick={handleNewAnswer}>Give Another Answer</button>\r\n        </div>\r\n      ):(\r\n      !title ?\r\n      <div className=\"loader\">\r\n      </div>\r\n      : \r\n      <>\r\n      <div className=\"question\">\r\n        <h2 contentEditable=\"true\">{title}</h2>\r\n        <div>{text}</div>\r\n        <ul className=\"keywords\">\r\n          {\r\n            keywords.map(({word}) => \r\n              <li>{word}</li>\r\n            )\r\n          }\r\n        </ul>\r\n        <div><span className=\"small-caps\">asked on: </span>{questionedOn}</div>\r\n      </div>\r\n\r\n      <h2>Answers({answers.length})</h2>\r\n      {answers.length ?\r\n        (<ul>                    \r\n            {answers.map(({text,answeredOn}) => \r\n              <li className=\"answer\">\r\n                <div className=\"answer-text\">{text}</div>\r\n                \r\n                <div><span className=\"small-caps\">answered on:</span> {answeredOn}</div>\r\n              </li>\r\n            )}\r\n        </ul>\r\n        ):(\r\n          []\r\n        )\r\n      }\r\n\r\n    <h2>Give your answer:</h2>\r\n    <textarea\r\n      id=\"my-answer\"\r\n      label=\"Multiline\"\r\n      multiline\r\n      rows={8}\r\n      variant=\"outlined\"\r\n      onChange={handleChange}\r\n      value={answer}\r\n    />\r\n    <div className=\"btns-container\">\r\n      <button className=\"submit-btn\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n      <button className=\"cancel-btn\" onClick={handleCancel}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n    </>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth.service.js",["86"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:4000/\";\r\n\r\nconst register = (username, email, password, fullName) => {\r\n  return axios.post(API_URL + \"saas1/user/signup/\", {\r\n    username,    \r\n    password,\r\n    email,\r\n    fullName\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"saas1/signin/\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      //temporary solution\r\n      response.data[\"username\"]=username;\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst getAllUsers = (userid) => {\r\n  return axios.get(API_URL + \"saas1/user/findusers/\",{userid});\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getAllUsers,\r\n};","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\user.service.js",["87","88"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header.service\";\r\n\r\nconst API_URL = \"http://localhost:5000/\";\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"qa/question/findquestions\");\r\n};\r\n\r\n\r\nconst getAllQuestions = () => {\r\n  return axios.get(API_URL + \"qa/question/findquestions\");\r\n};\r\n\r\nconst getUserQuestions = (userid) => {\r\n  return axios.post(API_URL + \"qa/question/findquestionsbyuserid\",{userid});\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getUserQuestions,\r\n  getAllQuestions\r\n};","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth-header.service.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\questions.service.js",["89","90"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header.service\";\r\n\r\nconst createQuestion = (question) => {\r\n    return axios.post(\"http://localhost:5000/qa/question/createquestion\", question);\r\n  };\r\n  \r\nconst findQuestionById = (id) => {\r\n  return axios.post(\"http://localhost:5000/qa/question/findquestionbyid\", { id });\r\n};\r\n\r\nconst filterQuestionsByKeywordAndDate = (startDate, endDate, word) => {\r\n  return axios.post(\"http://localhost:5000/qa/question/findquestionsbydateandkeyword\", {startDate, endDate, word});\r\n};\r\n\r\nconst filterQuestionsByKeyword = (word) => {\r\n  return axios.post(\"http://localhost:5000/qa/question/findquestionsbykeyword\", {word});\r\n};\r\n\r\nconst filterQuestionsByDate = (startDate, endDate) => {\r\n  return axios.post(\"http://localhost:5000/qa/question/findquestionsbydate\", {startDate, endDate});\r\n};\r\n  \r\nexport default {\r\n  createQuestion,\r\n  findQuestionById,\r\n  filterQuestionsByKeywordAndDate,\r\n  filterQuestionsByKeyword,\r\n  filterQuestionsByDate\r\n};","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\tabPanel.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\edit.component.js",["91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport {useLocation, useParams, Link} from \"react-router-dom\";\r\n\r\nimport \"../styling/answerQuestion.css\";\r\nimport QuestionsService from \"../services/questions.service\";\r\n\r\nconst Edit = () => {\r\n  const {id} = useParams();\r\n  \r\n  //const location = useLocation();\r\n  //console.log(location.question.answers);\r\n  //const {answers,text,title,questionedOn} = location.question;\r\n  const [text,setText] = useState(\"\");\r\n  const [title,setTitle] = useState(\"\");\r\n  const [questionedOn,setQuestionedOn] = useState(\"\");\r\n  const [answers,setAnswers] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  \r\n  useEffect(()=> {\r\n    QuestionsService.findQuestionById(id).then(\r\n      (response) => {\r\n        console.log(response);\r\n        setText(response.data.text);\r\n        setTitle(response.data.title);\r\n        setQuestionedOn(response.data.questionedOn);\r\n        setAnswers(response.data.answers);\r\n      },\r\n     (error) => {\r\n      const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n          console.log(resMessage);\r\n      // setMessage(resMessage);\r\n      // setSuccessful(false);\r\n    })\r\n  },[])\r\n\r\n  const handleChange = (event) => {\r\n    setAnswer(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"answer-container\">\r\n      <h3>      \r\n          Edit question\r\n      </h3>\r\n      <div id=\"question-to-answer\" >\r\n        <h2>{title}</h2>\r\n        <div>{text}</div>\r\n        <div>Asked on {questionedOn}</div>\r\n      </div>\r\n      <ul className=\"answers-container\">\r\n        {answers.map( (question) => \r\n        {\r\n          const {id,title,text,questionedOn} = question;\r\n          return (\r\n          <li key={id}>\r\n          <div id=\"question\" >\r\n            <Link \r\n              to={{pathname: \"/answer/\"+id, question:{question}}} \r\n              className=\"answer-link\"\r\n            >\r\n              <h2>{title}</h2>\r\n            </Link>\r\n            <div>{text}</div>\r\n            <div>Asked on {questionedOn}</div>\r\n          </div>\r\n          </li>);\r\n        }\r\n      )}\r\n    </ul>\r\n    <label>Give your answer:</label>\r\n    <textarea\r\n      id=\"my-answer\"\r\n      label=\"Multiline\"\r\n      multiline\r\n      rows={10}\r\n      variant=\"outlined\"\r\n      onChange={handleChange}\r\n      value={answer}\r\n    />\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Edit;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\answers.service.js",["94","95"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header.service\";\r\n\r\nconst API_URL = \"http://localhost:5000/\";\r\n\r\nconst createAnswer = (text,userId,questionId) => {\r\n  return axios.post(API_URL + \"qa/answer/createanswer\", {text,userId,questionId});\r\n};\r\n\r\nconst getAllAnswers = () => {\r\n  return axios.get(API_URL + \"qa/answer/findanswers\");\r\n};\r\n\r\n  \r\nexport default {\r\n  createAnswer,\r\n  getAllAnswers\r\n};",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":35,"column":24,"nodeType":"102","endLine":35,"endColumn":63},{"ruleId":"103","severity":1,"message":"104","line":28,"column":6,"nodeType":"105","endLine":28,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"111","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"112","line":7,"column":7,"nodeType":"109","messageId":"110","endLine":7,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":277,"column":46,"nodeType":"115","messageId":"116","endLine":277,"endColumn":48},{"ruleId":"107","severity":1,"message":"111","line":2,"column":20,"nodeType":"109","messageId":"110","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":40,"column":5,"nodeType":"105","endLine":40,"endColumn":7,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":43,"column":1,"nodeType":"120","endLine":49,"endColumn":3},{"ruleId":"107","severity":1,"message":"121","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":19,"column":1,"nodeType":"120","endLine":23,"endColumn":3},{"ruleId":"107","severity":1,"message":"121","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":24,"column":1,"nodeType":"120","endLine":30,"endColumn":3},{"ruleId":"107","severity":1,"message":"122","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":39,"column":5,"nodeType":"105","endLine":39,"endColumn":7,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"124","line":45,"column":9,"nodeType":"109","messageId":"110","endLine":45,"endColumn":21},{"ruleId":"107","severity":1,"message":"121","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":15,"column":1,"nodeType":"120","endLine":18,"endColumn":3},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["127"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'required' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["128"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'authHeader' is defined but never used.","'useLocation' is defined but never used.",["129"],"'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},{"desc":"130","fix":"133"},"Update the dependencies array to be: [id]",{"range":"134","text":"135"},{"range":"136","text":"135"},{"range":"137","text":"135"},[850,852],"[id]",[1358,1360],[1288,1290]]