[{"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/index.js":"1","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/App.js":"2","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/askQuestion.component.js":"3","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/answer.component.js":"4","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/edit.component.js":"5","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/login.component.js":"6","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/signup.component.js":"7","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/browseQuestions.component.js":"8","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/home.component.js":"9","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/profile.component.js":"10","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/auth.service.js":"11","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/user.service.js":"12","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/tabPanel.component.js":"13","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/questions.service.js":"14","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/answers.service.js":"15","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/auth-header.service.js":"16","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/myQuestion.component.js":"17","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/myAnswer.component.js":"18"},{"size":241,"mtime":1624322347339,"results":"19","hashOfConfig":"20"},{"size":3365,"mtime":1625684213006,"results":"21","hashOfConfig":"20"},{"size":3180,"mtime":1625684213006,"results":"22","hashOfConfig":"20"},{"size":3276,"mtime":1625684213006,"results":"23","hashOfConfig":"20"},{"size":2267,"mtime":1625684213006,"results":"24","hashOfConfig":"20"},{"size":4071,"mtime":1624322347335,"results":"25","hashOfConfig":"20"},{"size":6031,"mtime":1624322347335,"results":"26","hashOfConfig":"20"},{"size":8317,"mtime":1625684213006,"results":"27","hashOfConfig":"20"},{"size":2438,"mtime":1625759695066,"results":"28","hashOfConfig":"20"},{"size":6773,"mtime":1625759695066,"results":"29","hashOfConfig":"20"},{"size":1450,"mtime":1625759695066,"results":"30","hashOfConfig":"20"},{"size":643,"mtime":1625753419373,"results":"31","hashOfConfig":"20"},{"size":2821,"mtime":1625759695066,"results":"32","hashOfConfig":"20"},{"size":1096,"mtime":1625760372474,"results":"33","hashOfConfig":"20"},{"size":520,"mtime":1625753419373,"results":"34","hashOfConfig":"20"},{"size":253,"mtime":1625760294665,"results":"35","hashOfConfig":"20"},{"size":3018,"mtime":1625684213006,"results":"36","hashOfConfig":"20"},{"size":3483,"mtime":1625759695066,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1bzah54",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/index.js",[],["86","87"],"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/App.js",["88"],"import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Image4 from './logo4.png'\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component.js\";\nimport Signup from \"./components/signup.component.js\";\nimport Home from \"./components/home.component.js\";\nimport Profile from \"./components/profile.component.js\";\nimport Answer from \"./components/answer.component.js\";\nimport Ask from \"./components/askQuestion.component.js\";\nimport Edit from \"./components/edit.component.js\";\nimport Browse from \"./components/browseQuestions.component.js\";\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n  \n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n    }\n\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n  };\n\n  return (\n    <>\n      <div className=\"logo-container\">\n        <Link to={\"/\"}><img src={Image4} className=\"logo-img\"></img></Link>\n      </div>     \n      <header>\n        <ul className=\"navbar\">\n            <li className=\"nav-btns\">\n              <ul>\n                <li><Link to={\"/home\"} className=\"nav-link\">Home</Link></li>\n                <li><Link to={() => currentUser ? \"/ask\" : \"/login\"}>Ask Question</Link></li>\n                <li><Link to={\"/questions\"}>Browse Questions</Link></li>\n              </ul>\n            </li> \n            \n            {currentUser ? (\n            <li className=\"auth-btns\">\n              <ul>\n                  <li className=\"nav-item\">\n                    <Link to={\"/profile\"} className=\"nav-link\" style={{color: \"#DBCD18\"}}>\n                      {currentUser.username}'s\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a href=\"/home\" className=\"nav-link\" onClick={logOut}>\n                      Logout\n                    </a>\n                  </li>\n                </ul>\n              </li>\n              ) : (\n              <li className=\"auth-btns\">\n                <ul>\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\">\n                      Login\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to={\"/signup\"} className=\"signup nav-link\">\n                      Sign Up,It's Free\n                    </Link>\n                  </li>\n                </ul>\n              </li>\n            )}\n        </ul>\n      </header>\n\n      <div className=\"body-container container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\n          <Route exact path=\"/answer/:id\"><Answer userId={currentUser ? currentUser.user.id : \"\"}/></Route>\n          <Route exact path=\"/edit/:id\"><Edit currentUser={currentUser}/></Route>\n          <Route exact path=\"/ask\" ><Ask userId={currentUser ? currentUser.user.id : \"\"}></Ask></Route>\n          <Route exact path=\"/questions\"><Browse currentUser={currentUser}/></Route>\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/askQuestion.component.js",[],"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/answer.component.js",["89"],"import React, { useState, useEffect } from \"react\";\nimport {useParams, useHistory} from \"react-router-dom\";\n\nimport \"../styling/answerQuestion.css\";\nimport QuestionsService from \"../services/questions.service\";\nimport AnswersService from \"../services/answers.service\";\n\nconst Question = ({userId}) => {\n  const {id} = useParams();\n  const history = useHistory();\n  \n  const [text,setText] = useState(\"\");\n  const [title,setTitle] = useState(\"\");\n  const [keywords,setKeywords] = useState([]);\n  const [questionedOn,setQuestionedOn] = useState(\"\");\n  const [answers,setAnswers] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  const [submitted,setSubmitted] = useState(false);\n  \n  useEffect(()=> {\n    QuestionsService.findQuestionById(id).then(\n      (response) => {\n        setText(response.data.text);\n        setTitle(response.data.title);\n        setKeywords(response.data.keywords);\n        setQuestionedOn(response.data.questionedOn);\n        setAnswers(response.data.answers);\n      },\n     (error) => {\n      const resMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n          console.log(resMessage);\n    })\n  },[])\n\n  const handleChange = (event) => {\n    setAnswer(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    AnswersService.createAnswer(answer,userId,id).then(() => {\n      setSubmitted(true);\n    })\n  }\n\n  const handleCancel = () => {\n    history.push(\"/questions\");\n  }\n\n  const handleNewAnswer = () => {\n    setSubmitted(false);\n    setAnswer('');\n  }\n\n  return (\n    <div className=\"answer-container\">\n      <h3>      \n          Answer a question\n      </h3>\n      {submitted ? (\n        <div>\n          <h4>Answer Submitted Succesfully</h4>\n          <button onClick={handleNewAnswer}>Give Another Answer</button>\n        </div>\n      ):(\n      !title ?\n      <div className=\"loader\">\n      </div>\n      : \n      <>\n      <div className=\"question\">\n        <h2 contentEditable=\"true\">{title}</h2>\n        <div>{text}</div>\n        <ul className=\"keywords\">\n          {\n            keywords.map(({word}) => \n              <li>{word}</li>\n            )\n          }\n        </ul>\n        <div><span className=\"small-caps\">asked on: </span>{questionedOn}</div>\n      </div>\n\n      <h2>Answers({answers.length})</h2>\n      {answers.length ?\n        (<ul>                    \n            {answers.map(({text,answeredOn}) => \n              <li className=\"answer\">\n                <div className=\"answer-text\">{text}</div>\n                \n                <div><span className=\"small-caps\">answered on:</span> {answeredOn}</div>\n              </li>\n            )}\n        </ul>\n        ):(\n          []\n        )\n      }\n\n    <h2>Give your answer:</h2>\n    <textarea\n      id=\"my-answer\"\n      label=\"Multiline\"\n      multiline\n      rows={8}\n      variant=\"outlined\"\n      onChange={handleChange}\n      value={answer}\n    />\n    <div className=\"btns-container\">\n      <button className=\"submit-btn\" onClick={handleSubmit}>\n        Submit\n      </button>\n      <button className=\"cancel-btn\" onClick={handleCancel}>\n        Cancel\n      </button>\n    </div>\n    </>\n    )}\n    </div>\n  );\n};\n\nexport default Question;","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/edit.component.js",["90"],"import React, { useState, useEffect } from \"react\";\nimport {useParams, Link} from \"react-router-dom\";\n\nimport \"../styling/answerQuestion.css\";\nimport QuestionsService from \"../services/questions.service\";\n\nconst Edit = () => {\n  const {id} = useParams();\n  \n  const [text,setText] = useState(\"\");\n  const [title,setTitle] = useState(\"\");\n  const [questionedOn,setQuestionedOn] = useState(\"\");\n  const [answers,setAnswers] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  \n  useEffect(()=> {\n    QuestionsService.findQuestionById(id).then(\n      (response) => {\n        console.log(response);\n        setText(response.data.text);\n        setTitle(response.data.title);\n        setQuestionedOn(response.data.questionedOn);\n        setAnswers(response.data.answers);\n      },\n     (error) => {\n      const resMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n          console.log(resMessage);\n      // setMessage(resMessage);\n      // setSuccessful(false);\n    })\n  },[])\n\n  const handleChange = (event) => {\n    setAnswer(event.target.value);\n  }\n\n  // const handleSubmit = (event) => {\n\n  // }\n\n\n  return (\n    <div className=\"answer-container\">\n      <h3>      \n          Edit question\n      </h3>\n      <div id=\"question-to-answer\" >\n        <h2>{title}</h2>\n        <div>{text}</div>\n        <div>Asked on {questionedOn}</div>\n      </div>\n      <ul className=\"answers-container\">\n        {answers.map( (question) => \n        {\n          const {id,title,text,questionedOn} = question;\n          return (\n          <li key={id}>\n          <div id=\"question\" >\n            <Link \n              to={{pathname: \"/answer/\"+id, question:{question}}} \n              className=\"answer-link\"\n            >\n              <h2>{title}</h2>\n            </Link>\n            <div>{text}</div>\n            <div>Asked on {questionedOn}</div>\n          </div>\n          </li>);\n        }\n      )}\n    </ul>\n    <label>Give your answer:</label>\n    <textarea\n      id=\"my-answer\"\n      label=\"Multiline\"\n      multiline\n      rows={10}\n      variant=\"outlined\"\n      onChange={handleChange}\n      value={answer}\n    />\n  </div>\n  );\n};\n\nexport default Edit;","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/login.component.js",[],"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/signup.component.js",[],"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/browseQuestions.component.js",["91"],"import React, { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport QuestionsService from \"../services/questions.service\";\nimport \"../styling/browseQuestions.css\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst Browse = ({currentUser}) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n  const [content, setContent] = useState([]);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n\n  useEffect(() => {\n    setDateTo(\"\");\n    setDateFrom(\"\");\n    setKeyword(\"\");\n\n    UserService.getPublicContent().then(\n      (response) => {\n        setAllQuestions(response.data);\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  const handleChangeDateFrom = (event) => setDateFrom(event.target.value)\n\n  const handleChangeDateTo = (event) => setDateTo(event.target.value)\n\n  const handleChangeKeyword = (event) => setKeyword(event.target.value)\n\n  const handleClear = () => {\n    setDateTo(\"\");\n    setDateFrom(\"\");\n    setKeyword(\"\");\n    setMessage(\"\");\n    setContent(allQuestions);\n  }\n\n  const handleApply = () => {\n    const stylesSuccess = {\n      color: 'green',\n      marginTop:'8px'\n    }\n    const stylesFail = {\n      color: 'red',\n      marginTop:'8px'\n    }\n\n    if (keyword && dateFrom && dateTo) {\n      const startDate = dateFrom.split(\"-\").join(\"\");\n      const endDate = dateTo.split(\"-\").join(\"\");\n      setMessage(\n        <div style={stylesSuccess}>\n          Filters Applied!\n        </div>\n      );\n      QuestionsService.filterQuestionsByKeywordAndDate(startDate, endDate, keyword).then(\n        (response) => {\n          setContent(response.data);\n        },\n        (error) => {\n          const _content =\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString();\n  \n          setContent(_content);\n        }\n      )\n\n    }\n    else if ((keyword && dateTo) || (keyword && dateFrom) || (!dateFrom && dateTo) || (dateFrom && !dateTo)) {\n      setMessage(\n        <div style={stylesFail}>\n          Provide both dates.\n        </div>\n      )\n    }      \n    else if (keyword) {\n      setMessage(\n        <div style={stylesSuccess}>\n          Filter Applied!\n        </div>\n      )\n      QuestionsService.filterQuestionsByKeyword(keyword).then(\n        (response) => {\n          setContent(response.data);\n        },\n        (error) => {\n          const _content =\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString();\n  \n          setContent(_content);\n        }\n      )\n\n    }\n    else if (dateFrom && dateTo) {\n      const startDate = dateFrom.split(\"-\").join(\"\");\n      const endDate = dateTo.split(\"-\").join(\"\");\n\n      QuestionsService.filterQuestionsByDate(startDate, endDate).then(\n        (response) => {\n          setContent(response.data);\n        },\n        (error) => {\n          const _content =\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString();\n  \n          setContent(_content);\n        }\n      )\n\n    }\n    else {\n      setMessage(\n        <div style={stylesFail}>\n          No Filters Applied!\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"browse-container\">\n      <div className=\"side-container\">\n        <div className=\"filter-container\">\n          <h2 id=\"filter-heading\">Filter Questions By :</h2>\n            <div className=\"filter-by-date-container\">\n              <h3>Date</h3>\n              <div className=\"filter-by-date\">\n                <form className={classes.container} noValidate>\n                <TextField\n                  id=\"date\"\n                  label=\"Date from\"\n                  type=\"date\"\n                  className={classes.textField}\n                  value={dateFrom}\n                  onChange={handleChangeDateFrom}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                </form>\n                <form className={classes.container} noValidate>\n                <TextField\n                  id=\"date\"\n                  label=\"Date to\"\n                  type=\"date\"\n                  className={classes.textField}\n                  value={dateTo}\n                  onChange={handleChangeDateTo}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                </form>\n              </div>\n            </div>\n\n            <div className=\"filter-by-keyword-container\">\n              <h3>Keyword</h3>\n              <div>\n                <input \n                  id=\"keyword-input\"\n                  onChange={handleChangeKeyword}\n                  value={keyword}\n                ></input>\n              </div>\n            </div>\n\n            {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n            )}\n\n            <div className=\"btns-container\">\n              <button className=\"submit-btn\" onClick={handleApply}>\n                Apply\n              </button>\n              <button className=\"cancel-btn\" onClick={handleClear}>\n                Clear\n              </button>\n            </div>\n        </div>\n      </div>\n\n      <div className=\"questions-container\">        \n        {(typeof content == 'string') \n        ? content \n        : (\n          (!content.length)\n          ? \n          (<div className=\"loader\">\n          </div>)\n          : (currentUser \n            ? (\n            <ul className=\"questions-container\">\n              {content.map( (question) => \n                {\n                  const {id,title,text,questionedOn,keywords} = question;\n                  return (\n                  <li key={id}>\n                    <div id=\"question\" >\n                      <Link \n                        to={{pathname: \"/answer/\"+id}} \n                        className=\"answer-link\"\n                      >\n                        <h2 className=\"title\">{title}</h2>\n                      </Link>\n                      <div>{text}</div>\n                      <ul className=\"keywords\">\n                        {\n                          keywords.map(({word}) => \n                            <li>{word}</li>\n                          )\n                        }\n                      </ul>\n                      <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\n                    </div>\n                  </li>);\n                }\n            )}\n            </ul>\n            ) : (\n            <ul className=\"questions-container\">\n            {content.slice(0,10).map( (question) => \n              {\n                const {id,title,text,questionedOn,keywords} = question;\n                return ( \n                <li id=\"question\" key={id}>\n                  <Link \n                      to={{pathname: \"/answer/\"+id, question}} \n                      className=\"answer-link\"\n                  >\n                    <h2>{title}</h2>\n                  </Link>\n                  <div>{text}</div>\n                  <ul className=\"keywords\">\n                    {\n                      keywords.map((keyword) => {\n                        <li>{keyword}</li>\n                      })\n                    }\n                  </ul>\n                  <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\n                </li>\n                )\n              }\n            )}\n            </ul>          \n          ))\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default Browse;","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/home.component.js",["92"],"import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport QuestionsService from \"../services/questions.service\";\nimport AuthenticationService from \"../services/auth.service\";\nimport AnswersService from \"../services/answers.service\";\n\nimport \"../styling/homepage.css\";\n\nconst Home = () => {\n  const [questions, setQuestions] = useState([]);\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0); \n  const [numberOfAnswers, setNumberOfAnswers] = useState(0); \n  const [numberOfUsers, setNumberOfUsers] = useState(0);\n\n  useEffect(() => {    \n\n    AuthenticationService.getNumberOfUsers().then(\n      (response) => {\n        setNumberOfUsers(response.data.count);\n      },\n      (error) => {\n        setNumberOfUsers(-1);\n      }\n    );\n\n    AnswersService.getNumberOfAnswers().then(\n      (response) => {\n        console.log(response.data);\n        setNumberOfAnswers(response.data.count);\n      },\n      (error) => {\n        // const _content =\n        //   (error.response && error.response.data) ||\n        //   error.message ||\n        //   error.toString();\n        //   console.log(_content);\n        setNumberOfAnswers(-1);\n      }\n    );\n\n    QuestionsService.getNumberOfQuestions().then(\n      (response) => {\n        setNumberOfQuestions(response.data.lengthcount);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n          setQuestions(_content);\n          setNumberOfQuestions(-1);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"side-stats\">\n        <div className=\"stats-container\">\n        <ul>\n            <li>\n              <h1>{numberOfQuestions}</h1>\n              <i>questions</i>\n            </li>\n            <li id=\"my-answers\">\n              <h1>{numberOfAnswers}</h1>\n              <i>answers</i>\n            </li>\n            <li>\n              <h1>{numberOfUsers}</h1>\n              <i>users</i>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <header className=\"jumbotron\">\n        <ul>\n        {typeof questions == 'string'\n        ? questions\n        : questions.map( ({id,title}) => \n                <li id=\"to-do-list-item\" key={id}><span id=\"list-item-id\">{id}</span>{title}</li>\n              )}\n        </ul>\n      </header>\n    </div>\n  );\n};\n\nexport default Home;","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/profile.component.js",[],"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/auth.service.js",["93"],"import axios from \"axios\";\nimport authHeader from \"./auth-header.service\";\n\nconst API_URL = \"http://localhost:4000/\";\n\nconst register = (username, email, password, fullName) => {\n  return axios.post(API_URL + \"auth/user/signup/\", {\n    username,    \n    password,\n    email,\n    fullName\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"auth/signin/\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      //temporary solution\n      response.data[\"username\"]=username;\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getAllUsers = (userid) => {\n  return axios.get(API_URL + \"auth/user/findusers/\",{userid});\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst deleteCurrentUser = (username) => {\n  return axios.post(API_URL + \"auth/user/deleteuser/\",{username},{headers: authHeader()});\n};\n\nconst updatePassword = (username,password) => {\n  return axios.post(API_URL + \"auth/user/updatepassword/\",{username,password},{headers: authHeader()});\n};\n\nconst getNumberOfUsers = () => {\n  return axios.get(API_URL + \"qa/answer/countusers\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  getAllUsers,\n  deleteCurrentUser,\n  updatePassword,\n  getNumberOfUsers\n};","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/user.service.js",["94"],"import axios from \"axios\";\n// import authHeader from \"./auth-header.service\";\n\nconst API_URL = \"http://localhost:5000/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"qa/question/findquestions\");\n};\n\n\nconst getAllQuestions = () => {\n  return axios.get(API_URL + \"qa/question/findquestions\");\n};\n\nconst getUserQuestions = (userid) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbyuserid\",{userid});\n};\n\nconst getUserAnswers = (userid) => {\n  return axios.post(API_URL + \"qa/answer/findanswersbyuserid\",{userid});\n};\n\nexport default {\n  getPublicContent,\n  getUserQuestions,\n  getAllQuestions,\n  getUserAnswers\n};","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/tabPanel.component.js",[],"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/questions.service.js",["95"],"import axios from \"axios\";\nimport authHeader from \"./auth-header.service\";\n\nconst API_URL = \"http://localhost:5000/\";\n\nconst createQuestion = (question) => {\n    return axios.post(API_URL + \"qa/question/createquestion\", question,{headers: authHeader()});\n  };\n  \nconst findQuestionById = (id) => {\n  return axios.post(API_URL + \"qa/question/findquestionbyid\", { id });\n};\n\nconst filterQuestionsByKeywordAndDate = (startDate, endDate, word) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbydateandkeyword\", {startDate, endDate, word});\n};\n\nconst filterQuestionsByKeyword = (word) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbykeyword\", {word});\n};\n\nconst filterQuestionsByDate = (startDate, endDate) => {\n  return axios.post(API_URL + \"qa/question/findquestionsbydate\", {startDate, endDate});\n};\n\nconst getNumberOfQuestions = () => {\n  return axios.get(API_URL + \"qa/answer/countquestions\");\n};\n  \nexport default {\n  createQuestion,\n  findQuestionById,\n  filterQuestionsByKeywordAndDate,\n  filterQuestionsByKeyword,\n  filterQuestionsByDate,\n  getNumberOfQuestions\n};","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/answers.service.js",["96"],"import axios from \"axios\";\n// import authHeader from \"./auth-header.service\";\n\nconst API_URL = \"http://localhost:5000/\";\n\nconst createAnswer = (text,userId,questionId) => {\n  return axios.post(API_URL + \"qa/answer/createanswer\", {text,userId,questionId});\n};\n\nconst getAllAnswers = () => {\n  return axios.get(API_URL + \"qa/answer/findanswers\");\n};\n\nconst getNumberOfAnswers = () => {\n  return axios.get(API_URL + \"qa/answer/countanswers\");\n};\n\n  \nexport default {\n  createAnswer,\n  getAllAnswers,\n  getNumberOfAnswers\n};","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/services/auth-header.service.js",[],"/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/myQuestion.component.js",["97"],"import React, { useState, useEffect } from \"react\";\n\nimport \"../styling/profile.css\";\n\nconst MyQuestion = ({id,title,text,questionedOn,keywords,answers}) => {\n    \n  const [edit,setEdit] = useState(false);\n  const [questionTitle,setQuestionTitle] = useState(title);\n  const [questionText,setQuestionText] = useState(text);\n\n  const handleEdit = () => edit ? (setQuestionText(text),setQuestionTitle(title),setEdit(!edit)): setEdit(!edit)\n\n  const handleDeleteQuestion = () => {\n    console.log(\"delete question\")\n  }\n\n  const handleChangeText = (event) => setQuestionText(event.target.value)\n\n  const handleChangeTitle = (event) => setQuestionTitle(event.target.value)\n\n    return (\n        <li key={id}>\n            <div id=\"question\" >\n                <div className=\"edit-container\">\n                    {edit\n                        ? <input id=\"change-title\" value={questionTitle} onChange={handleChangeTitle}></input>\n                        : <h2 className=\"title\">{questionTitle}</h2>\n                    }\n                    {\n                        edit\n                            ? (<div>\n                                <i class=\"fa fa-check underline\" style={{ fontSize: \"20px\", color: \"green\"}}> apply</i>\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleEdit}>cancel</i>\n                            </div>)\n                            : (<div>\n                                <i className='fas fa-pen underline' style={{ fontSize: \"20px\", color: \"grey\" }} onClick={handleEdit}>edit</i>\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleDeleteQuestion}> delete question</i>\n                            </div>\n                            )\n                    }\n                </div>\n\n                {edit\n                    ? <input id=\"change-text\" value={questionText} onChange={handleChangeText}></input>\n                    : <div>{questionText}</div>\n                }\n                \n                <ul className=\"keywords\">\n                    {\n                        keywords.map(({ word }) =>\n                            <li>{word}</li>\n                        )\n                    }\n                </ul>\n                <div><span className=\"small-caps\">answered on: </span> {questionedOn}</div>\n\n            </div>\n            <h2>Answers({answers.length})</h2>\n            {answers.length ?\n                (<ul>\n                    {answers.map(({ text, answeredOn }) =>\n                        <li className=\"answer\">\n                            <div className=\"answer-text\">{text}</div>\n                            <div><span className=\"small-caps\">asked on: </span> {answeredOn}</div>\n                        </li>\n                    )}\n                </ul>\n                ) : (\n                    []\n                )\n            }\n        </li>);\n}\n\nexport default MyQuestion;","/home/fay/Desktop/saas1-AskMeAnything/frontend-react/src/components/myAnswer.component.js",["98","99","100"],"import React, { useState, useEffect } from \"react\";\nimport \"../styling/browseQuestions.css\";\n\nimport \"../styling/profile.css\";\n\nconst MyAnswer = ({answer,handleDeleteAnswer}) => {\n    const {id,text,answeredOn,question} = answer;\n    const [edit,setEdit] = useState(false);\n    const [answerText,setAnswerText] = useState(text);\n\n    const handleEdit = () => edit ? (setAnswerText(text),setEdit(!edit)): setEdit(!edit)\n\n    // const handleDeleteAnswer = () => {\n    //     console.log(\"DELETE ANSWER\")\n    //     const profileSettings = document.getElementById(\"accept-delete\");\n    //     profileSettings.style.display = \"block\";\n    // }\n\n    const handleAcceptDelete = () => {\n\n    }\n\n    const handleSubmit = () => {\n\n    }\n\n    // const handleCancel = () => {\n    //     const profileSettings = document.getElementById(\"accept-delete\");\n    //     profileSettings.style.display = \"none\";\n    // }\n\n    const handleChangeText = (event) => setAnswerText(event.target.value)\n\n    return (\n        <li key={id}>\n            <div className=\"answer\">\n                <div className=\"edit-container\" id=\"flex-end\"> \n                    {\n                    edit\n                    ? (<div>\n                            <i className=\"fa fa-check underline\" style={{ fontSize: \"20px\", color: \"green\"}}> apply</i>\n                            <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleEdit}>cancel</i>\n                        </div>)\n                    : (<div>\n                            <i className='fas fa-pen underline' style={{ fontSize: \"20px\", color: \"grey\" }} onClick={handleEdit}>edit</i>\n                            <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleDeleteAnswer}> delete answer</i>\n                        </div>\n                    )\n                    }\n                </div>\n\n                {edit\n                    ? <input id=\"change-text\" value={answerText} onChange={handleChangeText}></input>\n                    : <div className=\"answer-text\">{answerText}</div>\n                }\n                <div><span className=\"small-caps\">asked on: </span> {answeredOn}</div>\n\n                {/* <div className=\"accept-delete-container\" id=\"accept-delete\">\n                    <div className=\"accept-delete-content\">\n                        <h1 style={{textAlign:\"center\"}}>Are you sure you want to delete it ?</h1>\n\n                        <div className=\"accept-delete\">                    \n                            <div>\n                                <button className=\"submit-btn\" onClick={handleSubmit}>Yes</button>\n                                <button className=\"submit-btn\" onClick={handleCancel}>No</button>\n                            </div>\n                        </div>\n                    </div>\n                </div> */}\n\n            </div>\n\n            <h2>Question Answered</h2>\n            <div id=\"question\" >\n                <h2 className=\"title\">{question.title}</h2>                      \n\n                <ul className=\"keywords\">\n                    {\n                    question.keywords.map(({ word }) =>\n                        <li>{word}</li>\n                    )\n                    }\n                </ul>\n                <div><span className=\"small-caps\">answered on: </span> {question.questionedOn}</div>\n\n            </div>\n        </li>\n    );\n}\n\nexport default MyAnswer;",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":36,"column":24,"nodeType":"107","endLine":36,"endColumn":63},{"ruleId":"108","severity":1,"message":"109","line":38,"column":5,"nodeType":"110","endLine":38,"endColumn":7,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"109","line":36,"column":5,"nodeType":"110","endLine":36,"endColumn":7,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":275,"column":46,"nodeType":"115","messageId":"116","endLine":275,"endColumn":48},{"ruleId":"117","severity":1,"message":"118","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":56,"column":1,"nodeType":"123","endLine":65,"endColumn":3},{"ruleId":"121","severity":1,"message":"122","line":23,"column":1,"nodeType":"123","endLine":28,"endColumn":3},{"ruleId":"121","severity":1,"message":"122","line":30,"column":1,"nodeType":"123","endLine":37,"endColumn":3},{"ruleId":"121","severity":1,"message":"122","line":19,"column":1,"nodeType":"123","endLine":23,"endColumn":3},{"ruleId":"117","severity":1,"message":"124","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"124","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"125","line":19,"column":11,"nodeType":"119","messageId":"120","endLine":19,"endColumn":29},{"ruleId":"117","severity":1,"message":"126","line":23,"column":11,"nodeType":"119","messageId":"120","endLine":23,"endColumn":23},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["129"],["130"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'UserService' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'handleAcceptDelete' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},"Update the dependencies array to be: [id]",{"range":"134","text":"135"},{"range":"136","text":"135"},[1249,1251],"[id]",[1092,1094]]