[{"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\index.js":"1","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\App.js":"2","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\signup.component.js":"3","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\login.component.js":"4","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\profile.component.js":"5","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\home.component.js":"6","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\askQuestion.component.js":"7","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\browseQuestions.component.js":"8","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\answer.component.js":"9","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth.service.js":"10","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\user.service.js":"11","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth-header.service.js":"12","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\questions.service.js":"13","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\tabPanel.component.js":"14","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\edit.component.js":"15","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\answers.service.js":"16","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\myQuestion.component.js":"17"},{"size":253,"mtime":1624194151701,"results":"18","hashOfConfig":"19"},{"size":3463,"mtime":1625672968655,"results":"20","hashOfConfig":"19"},{"size":6236,"mtime":1624194151700,"results":"21","hashOfConfig":"19"},{"size":4211,"mtime":1624194151698,"results":"22","hashOfConfig":"19"},{"size":5823,"mtime":1625753416994,"results":"23","hashOfConfig":"19"},{"size":2442,"mtime":1625753416994,"results":"24","hashOfConfig":"19"},{"size":3310,"mtime":1625672968673,"results":"25","hashOfConfig":"19"},{"size":8609,"mtime":1625672968684,"results":"26","hashOfConfig":"19"},{"size":3403,"mtime":1625672968661,"results":"27","hashOfConfig":"19"},{"size":1403,"mtime":1625753417012,"results":"28","hashOfConfig":"19"},{"size":533,"mtime":1625753417012,"results":"29","hashOfConfig":"19"},{"size":268,"mtime":1625672968727,"results":"30","hashOfConfig":"19"},{"size":946,"mtime":1625753417012,"results":"31","hashOfConfig":"19"},{"size":2660,"mtime":1625753416994,"results":"32","hashOfConfig":"19"},{"size":2357,"mtime":1625672968688,"results":"33","hashOfConfig":"19"},{"size":420,"mtime":1625753417009,"results":"34","hashOfConfig":"19"},{"size":3092,"mtime":1625672968706,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11b26jh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\index.js",[],["76","77"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\App.js",["78"],"import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Image4 from './logo4.png'\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component.js\";\r\nimport Signup from \"./components/signup.component.js\";\r\nimport Home from \"./components/home.component.js\";\r\nimport Profile from \"./components/profile.component.js\";\r\nimport Answer from \"./components/answer.component.js\";\r\nimport Ask from \"./components/askQuestion.component.js\";\r\nimport Edit from \"./components/edit.component.js\";\r\nimport Browse from \"./components/browseQuestions.component.js\";\r\n\r\nconst App = () => {\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  \r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo-container\">\r\n        <Link to={\"/\"}><img src={Image4} className=\"logo-img\"></img></Link>\r\n      </div>     \r\n      <header>\r\n        <ul className=\"navbar\">\r\n            <li className=\"nav-btns\">\r\n              <ul>\r\n                <li><Link to={\"/home\"} className=\"nav-link\">Home</Link></li>\r\n                <li><Link to={() => currentUser ? \"/ask\" : \"/login\"}>Ask Question</Link></li>\r\n                <li><Link to={\"/questions\"}>Browse Questions</Link></li>\r\n              </ul>\r\n            </li> \r\n            \r\n            {currentUser ? (\r\n            <li className=\"auth-btns\">\r\n              <ul>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/profile\"} className=\"nav-link\" style={{color: \"#DBCD18\"}}>\r\n                      {currentUser.username}'s\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a href=\"/home\" className=\"nav-link\" onClick={logOut}>\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              ) : (\r\n              <li className=\"auth-btns\">\r\n                <ul>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/login\"} className=\"nav-link\">\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/signup\"} className=\"signup nav-link\">\r\n                      Sign Up,It's Free\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            )}\r\n        </ul>\r\n      </header>\r\n\r\n      <div className=\"body-container container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n          <Route exact path=\"/answer/:id\"><Answer userId={currentUser ? currentUser.user.id : \"\"}/></Route>\r\n          <Route exact path=\"/edit/:id\"><Edit currentUser={currentUser}/></Route>\r\n          <Route exact path=\"/ask\" ><Ask userId={currentUser ? currentUser.user.id : \"\"}></Ask></Route>\r\n          <Route exact path=\"/questions\"><Browse currentUser={currentUser}/></Route>\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\signup.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\login.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\profile.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\home.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\askQuestion.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\browseQuestions.component.js",["79"],"import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport \"../styling/browseQuestions.css\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst Browse = ({currentUser}) => {\r\n  const classes = useStyles();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [content, setContent] = useState([]);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  const [dateFrom, setDateFrom] = useState(\"\");\r\n  const [dateTo, setDateTo] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDateTo(\"\");\r\n    setDateFrom(\"\");\r\n    setKeyword(\"\");\r\n\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        setAllQuestions(response.data);\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const handleChangeDateFrom = (event) => setDateFrom(event.target.value)\r\n\r\n  const handleChangeDateTo = (event) => setDateTo(event.target.value)\r\n\r\n  const handleChangeKeyword = (event) => setKeyword(event.target.value)\r\n\r\n  const handleClear = () => {\r\n    setDateTo(\"\");\r\n    setDateFrom(\"\");\r\n    setKeyword(\"\");\r\n    setMessage(\"\");\r\n    setContent(allQuestions);\r\n  }\r\n\r\n  const handleApply = () => {\r\n    const stylesSuccess = {\r\n      color: 'green',\r\n      marginTop:'8px'\r\n    }\r\n    const stylesFail = {\r\n      color: 'red',\r\n      marginTop:'8px'\r\n    }\r\n\r\n    if (keyword && dateFrom && dateTo) {\r\n      const startDate = dateFrom.split(\"-\").join(\"\");\r\n      const endDate = dateTo.split(\"-\").join(\"\");\r\n      setMessage(\r\n        <div style={stylesSuccess}>\r\n          Filters Applied!\r\n        </div>\r\n      );\r\n      QuestionsService.filterQuestionsByKeywordAndDate(startDate, endDate, keyword).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else if ((keyword && dateTo) || (keyword && dateFrom) || (!dateFrom && dateTo) || (dateFrom && !dateTo)) {\r\n      setMessage(\r\n        <div style={stylesFail}>\r\n          Provide both dates.\r\n        </div>\r\n      )\r\n    }      \r\n    else if (keyword) {\r\n      setMessage(\r\n        <div style={stylesSuccess}>\r\n          Filter Applied!\r\n        </div>\r\n      )\r\n      QuestionsService.filterQuestionsByKeyword(keyword).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else if (dateFrom && dateTo) {\r\n      const startDate = dateFrom.split(\"-\").join(\"\");\r\n      const endDate = dateTo.split(\"-\").join(\"\");\r\n\r\n      QuestionsService.filterQuestionsByDate(startDate, endDate).then(\r\n        (response) => {\r\n          setContent(response.data);\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString();\r\n  \r\n          setContent(_content);\r\n        }\r\n      )\r\n\r\n    }\r\n    else {\r\n      setMessage(\r\n        <div style={stylesFail}>\r\n          No Filters Applied!\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"browse-container\">\r\n      <div className=\"side-container\">\r\n        <div className=\"filter-container\">\r\n          <h2 id=\"filter-heading\">Filter Questions By :</h2>\r\n            <div className=\"filter-by-date-container\">\r\n              <h3>Date</h3>\r\n              <div className=\"filter-by-date\">\r\n                <form className={classes.container} noValidate>\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date from\"\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  value={dateFrom}\r\n                  onChange={handleChangeDateFrom}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                </form>\r\n                <form className={classes.container} noValidate>\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date to\"\r\n                  type=\"date\"\r\n                  className={classes.textField}\r\n                  value={dateTo}\r\n                  onChange={handleChangeDateTo}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"filter-by-keyword-container\">\r\n              <h3>Keyword</h3>\r\n              <div>\r\n                <input \r\n                  id=\"keyword-input\"\r\n                  onChange={handleChangeKeyword}\r\n                  value={keyword}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n            )}\r\n\r\n            <div className=\"btns-container\">\r\n              <button className=\"submit-btn\" onClick={handleApply}>\r\n                Apply\r\n              </button>\r\n              <button className=\"cancel-btn\" onClick={handleClear}>\r\n                Clear\r\n              </button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"questions-container\">        \r\n        {(typeof content == 'string') \r\n        ? content \r\n        : (\r\n          (!content.length)\r\n          ? \r\n          (<div className=\"loader\">\r\n          </div>)\r\n          : (currentUser \r\n            ? (\r\n            <ul className=\"questions-container\">\r\n              {content.map( (question) => \r\n                {\r\n                  const {id,title,text,questionedOn,keywords} = question;\r\n                  return (\r\n                  <li key={id}>\r\n                    <div id=\"question\" >\r\n                      <Link \r\n                        to={{pathname: \"/answer/\"+id}} \r\n                        className=\"answer-link\"\r\n                      >\r\n                        <h2 className=\"title\">{title}</h2>\r\n                      </Link>\r\n                      <div>{text}</div>\r\n                      <ul className=\"keywords\">\r\n                        {\r\n                          keywords.map(({word}) => \r\n                            <li>{word}</li>\r\n                          )\r\n                        }\r\n                      </ul>\r\n                      <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\r\n                    </div>\r\n                  </li>);\r\n                }\r\n            )}\r\n            </ul>\r\n            ) : (\r\n            <ul className=\"questions-container\">\r\n            {content.slice(0,10).map( (question) => \r\n              {\r\n                const {id,title,text,questionedOn,keywords} = question;\r\n                return ( \r\n                <li id=\"question\" key={id}>\r\n                  <Link \r\n                      to={{pathname: \"/answer/\"+id, question}} \r\n                      className=\"answer-link\"\r\n                  >\r\n                    <h2>{title}</h2>\r\n                  </Link>\r\n                  <div>{text}</div>\r\n                  <ul className=\"keywords\">\r\n                    {\r\n                      keywords.map((keyword) => {\r\n                        <li>{keyword}</li>\r\n                      })\r\n                    }\r\n                  </ul>\r\n                  <div><span className=\"small-caps\">asked on: </span> {questionedOn}</div>\r\n                </li>\r\n                )\r\n              }\r\n            )}\r\n            </ul>          \r\n          ))\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\answer.component.js",["80"],"import React, { useState, useEffect } from \"react\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\n\r\nimport \"../styling/answerQuestion.css\";\r\nimport QuestionsService from \"../services/questions.service\";\r\nimport AnswersService from \"../services/answers.service\";\r\n\r\nconst Question = ({userId}) => {\r\n  const {id} = useParams();\r\n  const history = useHistory();\r\n  \r\n  const [text,setText] = useState(\"\");\r\n  const [title,setTitle] = useState(\"\");\r\n  const [keywords,setKeywords] = useState([]);\r\n  const [questionedOn,setQuestionedOn] = useState(\"\");\r\n  const [answers,setAnswers] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [submitted,setSubmitted] = useState(false);\r\n  \r\n  useEffect(()=> {\r\n    QuestionsService.findQuestionById(id).then(\r\n      (response) => {\r\n        setText(response.data.text);\r\n        setTitle(response.data.title);\r\n        setKeywords(response.data.keywords);\r\n        setQuestionedOn(response.data.questionedOn);\r\n        setAnswers(response.data.answers);\r\n      },\r\n     (error) => {\r\n      const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n          console.log(resMessage);\r\n    })\r\n  },[])\r\n\r\n  const handleChange = (event) => {\r\n    setAnswer(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    AnswersService.createAnswer(answer,userId,id).then(() => {\r\n      setSubmitted(true);\r\n    })\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/questions\");\r\n  }\r\n\r\n  const handleNewAnswer = () => {\r\n    setSubmitted(false);\r\n    setAnswer('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"answer-container\">\r\n      <h3>      \r\n          Answer a question\r\n      </h3>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>Answer Submitted Succesfully</h4>\r\n          <button onClick={handleNewAnswer}>Give Another Answer</button>\r\n        </div>\r\n      ):(\r\n      !title ?\r\n      <div className=\"loader\">\r\n      </div>\r\n      : \r\n      <>\r\n      <div className=\"question\">\r\n        <h2 contentEditable=\"true\">{title}</h2>\r\n        <div>{text}</div>\r\n        <ul className=\"keywords\">\r\n          {\r\n            keywords.map(({word}) => \r\n              <li>{word}</li>\r\n            )\r\n          }\r\n        </ul>\r\n        <div><span className=\"small-caps\">asked on: </span>{questionedOn}</div>\r\n      </div>\r\n\r\n      <h2>Answers({answers.length})</h2>\r\n      {answers.length ?\r\n        (<ul>                    \r\n            {answers.map(({text,answeredOn}) => \r\n              <li className=\"answer\">\r\n                <div className=\"answer-text\">{text}</div>\r\n                \r\n                <div><span className=\"small-caps\">answered on:</span> {answeredOn}</div>\r\n              </li>\r\n            )}\r\n        </ul>\r\n        ):(\r\n          []\r\n        )\r\n      }\r\n\r\n    <h2>Give your answer:</h2>\r\n    <textarea\r\n      id=\"my-answer\"\r\n      label=\"Multiline\"\r\n      multiline\r\n      rows={8}\r\n      variant=\"outlined\"\r\n      onChange={handleChange}\r\n      value={answer}\r\n    />\r\n    <div className=\"btns-container\">\r\n      <button className=\"submit-btn\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n      <button className=\"cancel-btn\" onClick={handleCancel}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n    </>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth.service.js",["81"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\user.service.js",["82"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\auth-header.service.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\questions.service.js",["83"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\tabPanel.component.js",[],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\edit.component.js",["84"],"import React, { useState, useEffect } from \"react\";\r\nimport {useParams, Link} from \"react-router-dom\";\r\n\r\nimport \"../styling/answerQuestion.css\";\r\nimport QuestionsService from \"../services/questions.service\";\r\n\r\nconst Edit = () => {\r\n  const {id} = useParams();\r\n  \r\n  const [text,setText] = useState(\"\");\r\n  const [title,setTitle] = useState(\"\");\r\n  const [questionedOn,setQuestionedOn] = useState(\"\");\r\n  const [answers,setAnswers] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  \r\n  useEffect(()=> {\r\n    QuestionsService.findQuestionById(id).then(\r\n      (response) => {\r\n        console.log(response);\r\n        setText(response.data.text);\r\n        setTitle(response.data.title);\r\n        setQuestionedOn(response.data.questionedOn);\r\n        setAnswers(response.data.answers);\r\n      },\r\n     (error) => {\r\n      const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n          console.log(resMessage);\r\n      // setMessage(resMessage);\r\n      // setSuccessful(false);\r\n    })\r\n  },[])\r\n\r\n  const handleChange = (event) => {\r\n    setAnswer(event.target.value);\r\n  }\r\n\r\n  // const handleSubmit = (event) => {\r\n\r\n  // }\r\n\r\n\r\n  return (\r\n    <div className=\"answer-container\">\r\n      <h3>      \r\n          Edit question\r\n      </h3>\r\n      <div id=\"question-to-answer\" >\r\n        <h2>{title}</h2>\r\n        <div>{text}</div>\r\n        <div>Asked on {questionedOn}</div>\r\n      </div>\r\n      <ul className=\"answers-container\">\r\n        {answers.map( (question) => \r\n        {\r\n          const {id,title,text,questionedOn} = question;\r\n          return (\r\n          <li key={id}>\r\n          <div id=\"question\" >\r\n            <Link \r\n              to={{pathname: \"/answer/\"+id, question:{question}}} \r\n              className=\"answer-link\"\r\n            >\r\n              <h2>{title}</h2>\r\n            </Link>\r\n            <div>{text}</div>\r\n            <div>Asked on {questionedOn}</div>\r\n          </div>\r\n          </li>);\r\n        }\r\n      )}\r\n    </ul>\r\n    <label>Give your answer:</label>\r\n    <textarea\r\n      id=\"my-answer\"\r\n      label=\"Multiline\"\r\n      multiline\r\n      rows={10}\r\n      variant=\"outlined\"\r\n      onChange={handleChange}\r\n      value={answer}\r\n    />\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Edit;","C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\services\\answers.service.js",["85"],"C:\\Users\\jason\\projects\\saas1-AskMeAnything\\frontend-react\\src\\components\\myQuestion.component.js",["86"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"../styling/profile.css\";\r\n\r\nconst MyQuestion = ({id,title,text,questionedOn,keywords,answers}) => {\r\n    \r\n  const [edit,setEdit] = useState(false);\r\n  const [questionTitle,setQuestionTitle] = useState(title);\r\n  const [questionText,setQuestionText] = useState(text);\r\n\r\n  const handleEdit = () => edit ? (setQuestionText(text),setQuestionTitle(title),setEdit(!edit)): setEdit(!edit)\r\n\r\n  const handleDeleteQuestion = () => {\r\n    console.log(\"delete question\")\r\n  }\r\n\r\n  const handleChangeText = (event) => setQuestionText(event.target.value)\r\n\r\n  const handleChangeTitle = (event) => setQuestionTitle(event.target.value)\r\n\r\n    return (\r\n        <li key={id}>\r\n            <div id=\"question\" >\r\n                <div className=\"edit-container\">\r\n                    {edit\r\n                        ? <input id=\"change-title\" value={questionTitle} onChange={handleChangeTitle}></input>\r\n                        : <h2 className=\"title\">{questionTitle}</h2>\r\n                    }\r\n                    {\r\n                        edit\r\n                            ? (<div>\r\n                                <i class=\"fa fa-check underline\" style={{ fontSize: \"20px\", color: \"green\"}}> apply</i>\r\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleEdit}>cancel</i>\r\n                            </div>)\r\n                            : (<div>\r\n                                <i className='fas fa-pen underline' style={{ fontSize: \"20px\", color: \"grey\" }} onClick={handleEdit}>edit</i>\r\n                                <i className=\"fa fa-close underline\" style={{ fontSize: \"20px\", color: \"red\", marginLeft: \"15px\" }} onClick={handleDeleteQuestion}> delete question</i>\r\n                            </div>\r\n                            )\r\n                    }\r\n                </div>\r\n\r\n                {edit\r\n                    ? <input id=\"change-text\" value={questionText} onChange={handleChangeText}></input>\r\n                    : <div>{questionText}</div>\r\n                }\r\n                \r\n                <ul className=\"keywords\">\r\n                    {\r\n                        keywords.map(({ word }) =>\r\n                            <li>{word}</li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <div><span className=\"small-caps\">answered on: </span> {questionedOn}</div>\r\n\r\n            </div>\r\n            <h2>Answers({answers.length})</h2>\r\n            {answers.length ?\r\n                (<ul>\r\n                    {answers.map(({ text, answeredOn }) =>\r\n                        <li className=\"answer\">\r\n                            <div className=\"answer-text\">{text}</div>\r\n                            <div><span className=\"small-caps\">asked on: </span> {answeredOn}</div>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                ) : (\r\n                    []\r\n                )\r\n            }\r\n        </li>);\r\n}\r\n\r\nexport default MyQuestion;",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":36,"column":24,"nodeType":"93","endLine":36,"endColumn":63},{"ruleId":"94","severity":1,"message":"95","line":275,"column":46,"nodeType":"96","messageId":"97","endLine":275,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":38,"column":5,"nodeType":"100","endLine":38,"endColumn":7,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":52,"column":1,"nodeType":"104","endLine":60,"endColumn":3},{"ruleId":"102","severity":1,"message":"103","line":19,"column":1,"nodeType":"104","endLine":23,"endColumn":3},{"ruleId":"102","severity":1,"message":"103","line":23,"column":1,"nodeType":"104","endLine":29,"endColumn":3},{"ruleId":"98","severity":1,"message":"99","line":36,"column":5,"nodeType":"100","endLine":36,"endColumn":7,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"103","line":15,"column":1,"nodeType":"104","endLine":18,"endColumn":3},{"ruleId":"106","severity":1,"message":"107","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["112"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},"Update the dependencies array to be: [id]",{"range":"117","text":"118"},{"range":"119","text":"118"},[1286,1288],"[id]",[1127,1129]]